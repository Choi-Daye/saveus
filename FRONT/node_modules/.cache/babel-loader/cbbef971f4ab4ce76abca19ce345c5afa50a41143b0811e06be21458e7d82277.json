{"ast":null,"code":"import axios from 'axios';\nexport default {\n  props: {\n    memHome: String,\n    startPoint: String,\n    endPoint: String,\n    memYoungY: Boolean,\n    memYoungN: Boolean,\n    memSubsidiaryYn: Boolean\n  },\n  data() {\n    return {\n      localStartPoint: this.startPoint,\n      localEndPoint: this.endPoint,\n      routeInfo: {\n        start: '',\n        end: '',\n        distance: '',\n        duration: ''\n      },\n      map: null\n    };\n  },\n  methods: {\n    async findRoute() {\n      try {\n        const apiBaseUrl = process.env.VUE_APP_API_BASE_URL;\n        console.log('Sending request to find route with data:', {\n          startPoint: this.localStartPoint,\n          endPoint: this.localEndPoint\n        });\n        const response = await axios.post(`${apiBaseUrl}/odsay/find-route/`, {\n          startPoint: this.localStartPoint,\n          endPoint: this.localEndPoint\n        });\n        this.routeInfo = response.data;\n        console.log('Route info received:', this.routeInfo);\n        this.displayRouteInfo(this.routeInfo);\n      } catch (error) {\n        console.error('Error finding route:', error);\n        if (error.response) {\n          console.error('Error response data:', error.response.data);\n        }\n      }\n    },\n    displayRouteInfo(routeInfo) {\n      var results = document.getElementById('results');\n      results.innerHTML = `\n                <h2>경로 정보</h2>\n                <p>출발지: ${routeInfo.start}</p>\n                <p>도착지: ${routeInfo.end}</p>\n                <p>거리: ${routeInfo.distance}</p>\n                <p>시간: ${routeInfo.duration}</p>\n            `;\n    },\n    initializeMap() {\n      if (window.naver) {\n        var mapOptions = {\n          center: new naver.maps.LatLng(37.5665, 126.9780),\n          zoom: 10\n        };\n        this.map = new naver.maps.Map('map', mapOptions);\n      } else {\n        console.error('Naver Maps API is not loaded.');\n      }\n    }\n  },\n  async mounted() {\n    this.initializeMap();\n  }\n};","map":{"version":3,"names":["axios","props","memHome","String","startPoint","endPoint","memYoungY","Boolean","memYoungN","memSubsidiaryYn","data","localStartPoint","localEndPoint","routeInfo","start","end","distance","duration","map","methods","findRoute","apiBaseUrl","process","env","VUE_APP_API_BASE_URL","console","log","response","post","displayRouteInfo","error","results","document","getElementById","innerHTML","initializeMap","window","naver","mapOptions","center","maps","LatLng","zoom","Map","mounted"],"sources":["/Users/parkjiyoung/Desktop/computer/smart_injae/hackshim_project/saveus_proto/saveus/frontend/src/assets/js/MapView.js"],"sourcesContent":["import axios from 'axios';\n\nexport default {\n    props: {\n        memHome: String,\n        startPoint: String,\n        endPoint: String,\n        memYoungY: Boolean,\n        memYoungN: Boolean,\n        memSubsidiaryYn: Boolean\n    },\n    data() {\n        return {\n            localStartPoint: this.startPoint,\n            localEndPoint: this.endPoint,\n            routeInfo: {\n                start: '',\n                end: '',\n                distance: '',\n                duration: ''\n            },\n            map: null,\n        };\n    },\n    methods: {\n        async findRoute() {\n            try {\n                const apiBaseUrl = process.env.VUE_APP_API_BASE_URL;\n                console.log('Sending request to find route with data:', {\n                    startPoint: this.localStartPoint,\n                    endPoint: this.localEndPoint\n                });\n                const response = await axios.post(`${apiBaseUrl}/odsay/find-route/`, {\n                    startPoint: this.localStartPoint,\n                    endPoint: this.localEndPoint\n                });\n                this.routeInfo = response.data;\n                console.log('Route info received:', this.routeInfo);\n                this.displayRouteInfo(this.routeInfo);\n            } catch (error) {\n                console.error('Error finding route:', error);\n                if (error.response) {\n                    console.error('Error response data:', error.response.data);\n                }\n            }\n        },\n        displayRouteInfo(routeInfo) {\n            var results = document.getElementById('results');\n            results.innerHTML = `\n                <h2>경로 정보</h2>\n                <p>출발지: ${routeInfo.start}</p>\n                <p>도착지: ${routeInfo.end}</p>\n                <p>거리: ${routeInfo.distance}</p>\n                <p>시간: ${routeInfo.duration}</p>\n            `;\n        },\n        initializeMap() {\n            if (window.naver) {\n                var mapOptions = {\n                    center: new naver.maps.LatLng(37.5665, 126.9780),\n                    zoom: 10\n                };\n                this.map = new naver.maps.Map('map', mapOptions);\n            } else {\n                console.error('Naver Maps API is not loaded.');\n            }\n        }\n    },\n    async mounted() {\n        this.initializeMap();\n    },\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,eAAe;EACXC,KAAK,EAAE;IACHC,OAAO,EAAEC,MAAM;IACfC,UAAU,EAAED,MAAM;IAClBE,QAAQ,EAAEF,MAAM;IAChBG,SAAS,EAAEC,OAAO;IAClBC,SAAS,EAAED,OAAO;IAClBE,eAAe,EAAEF;EACrB,CAAC;EACDG,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,eAAe,EAAE,IAAI,CAACP,UAAU;MAChCQ,aAAa,EAAE,IAAI,CAACP,QAAQ;MAC5BQ,SAAS,EAAE;QACPC,KAAK,EAAE,EAAE;QACTC,GAAG,EAAE,EAAE;QACPC,QAAQ,EAAE,EAAE;QACZC,QAAQ,EAAE;MACd,CAAC;MACDC,GAAG,EAAE;IACT,CAAC;EACL,CAAC;EACDC,OAAO,EAAE;IACL,MAAMC,SAASA,CAAA,EAAG;MACd,IAAI;QACA,MAAMC,UAAU,GAAGC,OAAO,CAACC,GAAG,CAACC,oBAAoB;QACnDC,OAAO,CAACC,GAAG,CAAC,0CAA0C,EAAE;UACpDtB,UAAU,EAAE,IAAI,CAACO,eAAe;UAChCN,QAAQ,EAAE,IAAI,CAACO;QACnB,CAAC,CAAC;QACF,MAAMe,QAAQ,GAAG,MAAM3B,KAAK,CAAC4B,IAAI,CAAE,GAAEP,UAAW,oBAAmB,EAAE;UACjEjB,UAAU,EAAE,IAAI,CAACO,eAAe;UAChCN,QAAQ,EAAE,IAAI,CAACO;QACnB,CAAC,CAAC;QACF,IAAI,CAACC,SAAS,GAAGc,QAAQ,CAACjB,IAAI;QAC9Be,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAE,IAAI,CAACb,SAAS,CAAC;QACnD,IAAI,CAACgB,gBAAgB,CAAC,IAAI,CAAChB,SAAS,CAAC;MACzC,CAAC,CAAC,OAAOiB,KAAK,EAAE;QACZL,OAAO,CAACK,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;QAC5C,IAAIA,KAAK,CAACH,QAAQ,EAAE;UAChBF,OAAO,CAACK,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAACH,QAAQ,CAACjB,IAAI,CAAC;QAC9D;MACJ;IACJ,CAAC;IACDmB,gBAAgBA,CAAChB,SAAS,EAAE;MACxB,IAAIkB,OAAO,GAAGC,QAAQ,CAACC,cAAc,CAAC,SAAS,CAAC;MAChDF,OAAO,CAACG,SAAS,GAAI;AACjC;AACA,0BAA0BrB,SAAS,CAACC,KAAM;AAC1C,0BAA0BD,SAAS,CAACE,GAAI;AACxC,yBAAyBF,SAAS,CAACG,QAAS;AAC5C,yBAAyBH,SAAS,CAACI,QAAS;AAC5C,aAAa;IACL,CAAC;IACDkB,aAAaA,CAAA,EAAG;MACZ,IAAIC,MAAM,CAACC,KAAK,EAAE;QACd,IAAIC,UAAU,GAAG;UACbC,MAAM,EAAE,IAAIF,KAAK,CAACG,IAAI,CAACC,MAAM,CAAC,OAAO,EAAE,QAAQ,CAAC;UAChDC,IAAI,EAAE;QACV,CAAC;QACD,IAAI,CAACxB,GAAG,GAAG,IAAImB,KAAK,CAACG,IAAI,CAACG,GAAG,CAAC,KAAK,EAAEL,UAAU,CAAC;MACpD,CAAC,MAAM;QACHb,OAAO,CAACK,KAAK,CAAC,+BAA+B,CAAC;MAClD;IACJ;EACJ,CAAC;EACD,MAAMc,OAAOA,CAAA,EAAG;IACZ,IAAI,CAACT,aAAa,CAAC,CAAC;EACxB;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}