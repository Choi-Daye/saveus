{"ast":null,"code":"import { createApp } from 'vue';\nimport App from './App.vue';\nimport router from './router';\nimport axios from 'axios';\n\n// Axios 기본 설정\naxios.defaults.withCredentials = true; // withCredentials 설정 추가\naxios.defaults.xsrfCookieName = 'csrftoken';\naxios.defaults.xsrfHeaderName = 'X-CSRFToken';\n\n// API 기본 URL 설정\nconst apiBaseUrl = process.env.VUE_APP_USE_NGROK === 'true' ? process.env.VUE_APP_API_BASE_URL_NGROK : process.env.VUE_APP_API_BASE_URL_LOCAL;\nif (!apiBaseUrl) {\n  console.error('API Base URL is not defined. Check your .env file.');\n} else {\n  console.log(`API Base URL: ${apiBaseUrl}`); // 디버깅용 로그\n}\n\n// CSRF 토큰을 가져와 Axios에 설정\naxios.get(`${apiBaseUrl}/map/set-csrf-token/`).then(response => {\n  console.log('main.js >> CSRF Token response:', response); // 디버깅용 로그\n  axios.defaults.headers.common['X-CSRFToken'] = response.data.csrfToken;\n}).catch(error => {\n  console.error('Error getting CSRF Token: ', error); // 디버깅용 로그\n});\n\n// WebSocket URL 설정\nconst wsProtocol = process.env.NODE_ENV === 'production' ? 'wss' : 'ws';\nconst wsBaseUrl = process.env.VUE_APP_USE_NGROK === 'true' ? process.env.VUE_APP_WS_BASE_URL_NGROK : process.env.VUE_APP_WS_BASE_URL_LOCAL;\nif (!wsBaseUrl) {\n  console.error('WebSocket Base URL is not defined. Check your .env file.');\n} else {\n  console.log(`WebSocket Base URL: ${wsBaseUrl}`); // 디버깅용 로그\n}\nconst socket = new WebSocket(`${wsProtocol}://${wsBaseUrl}/ws`);\nsocket.onopen = () => {\n  console.log('WebSocket connection opened.');\n};\nsocket.onmessage = event => {\n  console.log('WebSocket message received:', event.data);\n};\nsocket.onclose = () => {\n  console.log('WebSocket connection closed.');\n};\nsocket.onerror = error => {\n  console.error('WebSocket error:', error);\n};\nconst app = createApp(App);\napp.config.globalProperties.$axios = axios;\napp.config.globalProperties.$apiBaseUrl = apiBaseUrl; // apiBaseUrl 전역 속성으로 설정\napp.config.globalProperties.$socket = socket; // WebSocket 전역 속성으로 설정\n\napp.use(router).mount('#app');","map":{"version":3,"names":["createApp","App","router","axios","defaults","withCredentials","xsrfCookieName","xsrfHeaderName","apiBaseUrl","process","env","VUE_APP_USE_NGROK","VUE_APP_API_BASE_URL_NGROK","VUE_APP_API_BASE_URL_LOCAL","console","error","log","get","then","response","headers","common","data","csrfToken","catch","wsProtocol","NODE_ENV","wsBaseUrl","VUE_APP_WS_BASE_URL_NGROK","VUE_APP_WS_BASE_URL_LOCAL","socket","WebSocket","onopen","onmessage","event","onclose","onerror","app","config","globalProperties","$axios","$apiBaseUrl","$socket","use","mount"],"sources":["/Users/parkjiyoung/Desktop/computer/smart_injae/hackshim_project/saveus_proto/saveus/frontend/src/main.js"],"sourcesContent":["import { createApp } from 'vue';\nimport App from './App.vue';\nimport router from './router';\nimport axios from 'axios';\n\n// Axios 기본 설정\naxios.defaults.withCredentials = true; // withCredentials 설정 추가\naxios.defaults.xsrfCookieName = 'csrftoken';\naxios.defaults.xsrfHeaderName = 'X-CSRFToken';\n\n// API 기본 URL 설정\nconst apiBaseUrl = process.env.VUE_APP_USE_NGROK === 'true'\n    ? process.env.VUE_APP_API_BASE_URL_NGROK\n    : process.env.VUE_APP_API_BASE_URL_LOCAL;\n\n    if (!apiBaseUrl) {\n            console.error('API Base URL is not defined. Check your .env file.');\n        } else {\n            console.log(`API Base URL: ${apiBaseUrl}`); // 디버깅용 로그\n        }\n\n// CSRF 토큰을 가져와 Axios에 설정\naxios.get(`${apiBaseUrl}/map/set-csrf-token/`)\n    .then(response => {\n        console.log('main.js >> CSRF Token response:', response); // 디버깅용 로그\n        axios.defaults.headers.common['X-CSRFToken'] = response.data.csrfToken;\n    })\n    .catch(error => {\n        console.error('Error getting CSRF Token: ', error); // 디버깅용 로그\n    });\n\n// WebSocket URL 설정\nconst wsProtocol = process.env.NODE_ENV === 'production' ? 'wss' : 'ws';\nconst wsBaseUrl = process.env.VUE_APP_USE_NGROK === 'true'\n  ? process.env.VUE_APP_WS_BASE_URL_NGROK\n  : process.env.VUE_APP_WS_BASE_URL_LOCAL;\n\nif (!wsBaseUrl) {\n  console.error('WebSocket Base URL is not defined. Check your .env file.');\n} else {\n  console.log(`WebSocket Base URL: ${wsBaseUrl}`); // 디버깅용 로그\n}\n\nconst socket = new WebSocket(`${wsProtocol}://${wsBaseUrl}/ws`);\n\nsocket.onopen = () => {\n  console.log('WebSocket connection opened.');\n};\n\nsocket.onmessage = (event) => {\n  console.log('WebSocket message received:', event.data);\n};\n\nsocket.onclose = () => {\n  console.log('WebSocket connection closed.');\n};\n\nsocket.onerror = (error) => {\n  console.error('WebSocket error:', error);\n};\n\nconst app = createApp(App);\napp.config.globalProperties.$axios = axios;\napp.config.globalProperties.$apiBaseUrl = apiBaseUrl; // apiBaseUrl 전역 속성으로 설정\napp.config.globalProperties.$socket = socket; // WebSocket 전역 속성으로 설정\n\napp.use(router).mount('#app');"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}