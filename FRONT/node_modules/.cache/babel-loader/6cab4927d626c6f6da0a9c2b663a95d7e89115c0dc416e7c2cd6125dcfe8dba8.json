{"ast":null,"code":"import axios from 'axios';\nfunction getCookie(name) {\n  let cookieValue = null;\n  if (document.cookie && document.cookie !== '') {\n    const cookies = document.cookie.split(';');\n    for (let i = 0; i < cookies.length; i++) {\n      const cookie = cookies[i].trim();\n      if (cookie.substring(0, name.length + 1) === name + '=') {\n        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n        break;\n      }\n    }\n  }\n  return cookieValue;\n}\nexport default {\n  name: 'IntroPage',\n  data() {\n    return {\n      message: '',\n      csrfToken: null\n    };\n  },\n  created() {\n    this.getCsrfToken().then(() => {\n      this.fetchIntroData();\n    });\n  },\n  methods: {\n    async getCsrfToken() {\n      const apiBaseUrl = process.env.VUE_APP_API_BASE_URL;\n      console.log('---시작---');\n      console.log('IntroPage API Base URL:', apiBaseUrl);\n      try {\n        const response = await axios.get(`${apiBaseUrl}/map/api/set-csrf-token/`, {\n          withCredentials: true\n        });\n        console.log('IntroPage CSRF token set successfully.');\n        console.log('IntroPage Response data:', response.data);\n        const csrfToken = response.data.csrfToken;\n        this.csrfToken = csrfToken;\n\n        // 여기서 쿠키에서 CSRF 토큰을 읽지 않음\n        console.log('IntroPage CSRF 토큰:', this.csrfToken);\n        return this.csrfToken;\n      } catch (error) {\n        console.error('IntroPage Error setting CSRF token:', error);\n        throw error;\n      }\n    },\n    async fetchIntroData() {\n      const apiBaseUrl = process.env.VUE_APP_API_BASE_URL;\n      console.log('Fetching intro data from:', `${apiBaseUrl}/main/api/intro/`);\n      try {\n        const response = await fetch(`${apiBaseUrl}/main/api/intro/`);\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n        console.log('IntroPage fetched data:', data);\n        this.message = data.message;\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","getCookie","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","data","message","csrfToken","created","getCsrfToken","then","fetchIntroData","methods","apiBaseUrl","process","env","VUE_APP_API_BASE_URL","console","log","response","get","withCredentials","error","fetch","ok","Error","json"],"sources":["/Users/parkjiyoung/Desktop/computer/smart_injae/hackshim_project/saveus_proto/saveus/frontend/src/assets/js/intro.js"],"sourcesContent":["import axios from 'axios';\n\nfunction getCookie(name) {\n    let cookieValue = null;\n    if (document.cookie && document.cookie !== '') {\n        const cookies = document.cookie.split(';');\n        for (let i = 0; i < cookies.length; i++) {\n            const cookie = cookies[i].trim();\n            if (cookie.substring(0, name.length + 1) === (name + '=')) {\n                cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n                break;\n            }\n        }\n    }\n    return cookieValue;\n}\n\nexport default {\n    name: 'IntroPage',\n    data() {\n        return {\n            message: '',\n            csrfToken: null,\n        };\n    },\n    created() {\n        this.getCsrfToken().then(() => {\n            this.fetchIntroData();\n        });\n    },\n    methods: {\n        async getCsrfToken() {\n            const apiBaseUrl = process.env.VUE_APP_API_BASE_URL;\n            console.log('---시작---')\n            console.log('IntroPage API Base URL:', apiBaseUrl);\n            try {\n                const response = await axios.get(`${apiBaseUrl}/map/api/set-csrf-token/`, { withCredentials: true });\n                console.log('IntroPage CSRF token set successfully.');\n                console.log('IntroPage Response data:', response.data);\n\n                const csrfToken = response.data.csrfToken;\n                this.csrfToken = csrfToken;\n\n                // 여기서 쿠키에서 CSRF 토큰을 읽지 않음\n                console.log('IntroPage CSRF 토큰:', this.csrfToken);\n                return this.csrfToken;\n            } catch (error) {\n                console.error('IntroPage Error setting CSRF token:', error);\n                throw error;\n            }\n        },\n        async fetchIntroData() {\n            const apiBaseUrl = process.env.VUE_APP_API_BASE_URL;\n            console.log('Fetching intro data from:', `${apiBaseUrl}/main/api/intro/`);\n            try {\n                const response = await fetch(`${apiBaseUrl}/main/api/intro/`);\n                if (!response.ok) {\n                    throw new Error('Network response was not ok');\n                }\n                const data = await response.json();\n                console.log('IntroPage fetched data:', data);\n                this.message = data.message;\n            } catch (error) {\n                console.error('Error fetching data:', error);\n            }\n        }\n    }\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}