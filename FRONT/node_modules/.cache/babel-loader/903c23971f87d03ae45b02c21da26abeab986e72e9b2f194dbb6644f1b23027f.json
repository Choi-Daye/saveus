{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport function handleLogin(alertComponent) {\n  // 로그인 로직 구현 (예: 서버에 로그인 요청 보내기)\n  console.log('로그인 시도 중...', this.loginData);\n  // 예시로, ngrok의 백엔드 서버로 로그인 요청 보내기\n  fetch('https://d5bf569728f0.ngrok.app/api/login/', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(this.loginData)\n  }).then(response => response.json()).then(data => {\n    if (data.success) {\n      console.log('로그인 성공:', data);\n      alertComponent.showAlert('로그인 성공하였습니다.', 'https://3a145eca76f9.ngrok.app/card-recom');\n      // 로그인 성공 후 동작 (예: 페이지 이동)\n    } else {\n      console.error('로그인 실패:', data.message);\n      alertComponent.showAlert('로그인 실패:', 'https://3a145eca76f9.ngrok.app/card-recom');\n    }\n  }).catch(error => {\n    console.error('로그인 에러:', error);\n    alertComponent.showAlert('로그인 성공하였습니다.', 'https://3a145eca76f9.ngrok.app/card-recom'); // 입력과 상관없이 성공 메시지 표시\n  });\n}\nexport function redirectToLogin() {\n  // 로그인 페이지로 리다이렉트\n  console.log('로그인 페이지로 이동');\n  // 실제 구현에서는 라우터를 사용하여 페이지 이동\n  this.$router.push('/login');\n}\nexport function redirectToSignup() {\n  // 회원가입 페이지로 리다이렉트\n  console.log('회원가입 페이지로 이동');\n  // 실제 구현에서는 라우터를 사용하여 페이지 이동\n  this.$router.push('/signup');\n}","map":{"version":3,"names":["handleLogin","alertComponent","console","log","loginData","fetch","method","headers","body","JSON","stringify","then","response","json","data","success","showAlert","error","message","catch","redirectToLogin","$router","push","redirectToSignup"],"sources":["/Users/parkjiyoung/Desktop/computer/smart_injae/hackshim_project/saveus_proto/saveus/frontend/src/assets/js/login.js"],"sourcesContent":["export function handleLogin(alertComponent) {\n    // 로그인 로직 구현 (예: 서버에 로그인 요청 보내기)\n    console.log('로그인 시도 중...', this.loginData);\n    // 예시로, ngrok의 백엔드 서버로 로그인 요청 보내기\n    fetch('https://d5bf569728f0.ngrok.app/api/login/', {\n    method: 'POST',\n    headers: {\n    'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(this.loginData)\n})\n    .then(response => response.json())\n    .then(data => {\n    if (data.success) {\n        console.log('로그인 성공:', data);\n        alertComponent.showAlert('로그인 성공하였습니다.', 'https://3a145eca76f9.ngrok.app/card-recom');\n        // 로그인 성공 후 동작 (예: 페이지 이동)\n    } else {\n        console.error('로그인 실패:', data.message);\n        alertComponent.showAlert('로그인 실패:', 'https://3a145eca76f9.ngrok.app/card-recom');\n    }\n    })\n    .catch(error => {\n    console.error('로그인 에러:', error);\n    alertComponent.showAlert('로그인 성공하였습니다.', 'https://3a145eca76f9.ngrok.app/card-recom'); // 입력과 상관없이 성공 메시지 표시\n    });\n}\n\nexport function redirectToLogin() {\n// 로그인 페이지로 리다이렉트\nconsole.log('로그인 페이지로 이동');\n// 실제 구현에서는 라우터를 사용하여 페이지 이동\nthis.$router.push('/login');\n}\n\nexport function redirectToSignup() {\n// 회원가입 페이지로 리다이렉트\nconsole.log('회원가입 페이지로 이동');\n// 실제 구현에서는 라우터를 사용하여 페이지 이동\nthis.$router.push('/signup');\n}\n"],"mappings":";AAAA,OAAO,SAASA,WAAWA,CAACC,cAAc,EAAE;EACxC;EACAC,OAAO,CAACC,GAAG,CAAC,aAAa,EAAE,IAAI,CAACC,SAAS,CAAC;EAC1C;EACAC,KAAK,CAAC,2CAA2C,EAAE;IACnDC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACT,cAAc,EAAE;IAChB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC,IAAI,CAACN,SAAS;EACvC,CAAC,CAAC,CACGO,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;IACd,IAAIA,IAAI,CAACC,OAAO,EAAE;MACdb,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEW,IAAI,CAAC;MAC5Bb,cAAc,CAACe,SAAS,CAAC,cAAc,EAAE,2CAA2C,CAAC;MACrF;IACJ,CAAC,MAAM;MACHd,OAAO,CAACe,KAAK,CAAC,SAAS,EAAEH,IAAI,CAACI,OAAO,CAAC;MACtCjB,cAAc,CAACe,SAAS,CAAC,SAAS,EAAE,2CAA2C,CAAC;IACpF;EACA,CAAC,CAAC,CACDG,KAAK,CAACF,KAAK,IAAI;IAChBf,OAAO,CAACe,KAAK,CAAC,SAAS,EAAEA,KAAK,CAAC;IAC/BhB,cAAc,CAACe,SAAS,CAAC,cAAc,EAAE,2CAA2C,CAAC,CAAC,CAAC;EACvF,CAAC,CAAC;AACN;AAEA,OAAO,SAASI,eAAeA,CAAA,EAAG;EAClC;EACAlB,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;EAC1B;EACA,IAAI,CAACkB,OAAO,CAACC,IAAI,CAAC,QAAQ,CAAC;AAC3B;AAEA,OAAO,SAASC,gBAAgBA,CAAA,EAAG;EACnC;EACArB,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;EAC3B;EACA,IAAI,CAACkB,OAAO,CAACC,IAAI,CAAC,SAAS,CAAC;AAC5B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}