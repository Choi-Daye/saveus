{"ast":null,"code":"import CardDetail from './CardDetail.vue';\nimport CardRecomMixin from '../assets/js/CardRecom.js';\nexport default {\n  name: 'CardRecom',\n  components: {\n    CardDetail\n  },\n  mixins: [CardRecomMixin],\n  props: {\n    startPoint: String,\n    endPoint: String,\n    memHome: String,\n    memYoungY: Boolean,\n    memYoungN: Boolean,\n    memSubsidiaryYn: Boolean\n  },\n  data() {\n    return {\n      localStartPoint: this.startPoint,\n      // propsÎ°úÎ∂ÄÌÑ∞ Îç∞Ïù¥ÌÑ∞Î•º dataÎ°ú ÏÑ§Ï†ï\n      localEndPoint: this.endPoint,\n      // propsÎ°úÎ∂ÄÌÑ∞ Îç∞Ïù¥ÌÑ∞Î•º dataÎ°ú ÏÑ§Ï†ï\n      routes: JSON.parse(this.$route.query.routes || '[]'),\n      // queryÎ°úÎ∂ÄÌÑ∞ routes ÌååÏã±\n      isModalVisible: false,\n      selectedCard: null\n    };\n  },\n  methods: {\n    openModal(card) {\n      this.selectedCard = card;\n      this.isModalVisible = true;\n    },\n    closeModal() {\n      this.isModalVisible = false;\n    }\n  },\n  watch: {\n    startPoint(newVal) {\n      this.localStartPoint = newVal;\n    },\n    endPoint(newVal) {\n      this.localEndPoint = newVal;\n    }\n  },\n  mounted() {\n    console.log('Received routes:', this.routes);\n  }\n};","map":{"version":3,"names":["CardDetail","CardRecomMixin","name","components","mixins","props","startPoint","String","endPoint","memHome","memYoungY","Boolean","memYoungN","memSubsidiaryYn","data","localStartPoint","localEndPoint","routes","JSON","parse","$route","query","isModalVisible","selectedCard","methods","openModal","card","closeModal","watch","newVal","mounted","console","log"],"sources":["/Users/parkjiyoung/Desktop/computer/smart_injae/hackshim_project/saveus_proto/saveus/frontend/src/views/CardRecom.vue"],"sourcesContent":["<template>\n    <div class=\"map-view\">\n        <div class=\"controls-results-chart-container\">\n            <div id=\"controls\">\n                <div class=\"control-item\">\n                    <label for=\"startAddress\">Ï∂úÎ∞úÏßÄ</label>\n                    <input type=\"text\" id=\"startAddress\" v-model=\"localStartPoint\">\n                </div>\n                <div class=\"control-item\">\n                    <label for=\"endAddress\">ÎèÑÏ∞©ÏßÄ</label>\n                    <input type=\"text\" id=\"endAddress\" v-model=\"localEndPoint\">\n                </div>\n                <button @click=\"findRoute\">Í∏∏Ï∞æÍ∏∞</button>\n            </div>\n            <div class=\"results-chart\">\n                <div id=\"results\">\n                    <h3> üß≠ Í≤ΩÎ°úÎ•º ÏÑ†ÌÉùÌïòÏÑ∏Ïöî! üß≠ </h3>\n                    <div class=\"route-list-box\">\n                        <ul class=\"route-list\">\n                            <li v-for=\"(route, index) in routes\" :key=\"index\" class=\"route-data\">\n                                <div class=\"route_con\" @click=\"handleRouteClick(route)\">\n                                    <div class=\"route_time_header\"> [Ï¥ù ÏÜåÏöî ÏãúÍ∞Ñ] {{ formatTime(route.totalTime) }}</div>\n                                    <div class=\"route_time\">\n                                        <span class=\"info_sub\">\n                                            <span>ÌôòÏäπ {{ route.subwayTransitCount + route.busTransitCount - 1 }}Ìöå | </span>\n                                            <span>{{ route.payment }}Ïõê | </span>\n                                            <span>{{ (route.totalDistance / 1000).toFixed(1) }}km</span>\n                                        </span>\n                                    </div>\n                                    <div class=\"route_bar\">\n                                        <span \n                                            v-for=\"(subPath, subIndex) in route.subPaths\" \n                                            :key=\"subIndex\"\n                                            :class=\"['bar_area', getTrafficClass(subPath, true)]\"\n                                            :style=\"{ flexBasis: `${subPath.sectionTime * 100}%`, minWidth: '6.5%' }\"\n                                        >\n                                            <span class=\"bar\">\n                                                <span class=\"time\">{{ subPath.sectionTime }}Î∂Ñ</span>\n                                            </span>\n                                        </span>\n                                    </div>\n                                    <div class=\"route_detail\">\n                                        <ul class=\"route-detail-list\">\n                                            <li v-for=\"(subPath, subIndex) in filteredSubPaths(route.subPaths)\" :key=\"subIndex\" class=\"line\">\n                                                <span class=\"icon\" :class=\"getTrafficClass(subPath)\"></span>\n                                                <span class=\"r_body\">\n                                                    <span class=\"r_action\">{{ getAction(subPath, subPath.startName, subPath.lane) }}</span>\n                                                </span>\n                                            </li>\n                                            <li :key=\"route.subPaths.length\" class=\"line\">\n                                                <span class=\"icon\"></span>\n                                                <span class=\"r_body\">\n                                                    <span class=\"r_title\">‚û™ {{ route.lastEndStation }} ÌïòÏ∞®</span>\n                                                </span>\n                                            </li>\n                                        </ul>\n                                        <div class=\"maker\" style=\"display: none;\">powered by<em>www.ODsay.com</em></div>\n                                    </div>\n                                </div>\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n                <div id=\"chat\">\n                    <canvas id=\"barChat\"></canvas>\n                </div>\n            </div>\n        </div>\n        <!-- Ïπ¥Îìú Î™©Î°ù -->\n        <div id=\"cards\">\n            <div\n                v-for=\"card in cards\"\n                :key=\"card.id\"\n                class=\"card\"\n                @click=\"openModal(card)\"\n            >\n                <img :src=\"card.imgSrc\" :alt=\"card.altText\" />\n                <p>{{ card.altText }}</p>\n            </div>\n        </div>\n\n        <!-- Î™®Îã¨ -->\n        <VueFinalModal\n            v-model=\"isModalVisible\"\n            :classes=\"{ 'vfm--overlay': 'custom-overlay-class', 'vfm--content': 'custom-content-class' }\"\n            >\n            <CardDetail :card=\"selectedCard\" />\n        </VueFinalModal>\n    </div>\n</template>\n\n<script>\nimport CardDetail from './CardDetail.vue';\nimport CardRecomMixin from '../assets/js/CardRecom.js';\n\nexport default {\n    name: 'CardRecom',\n    components: { CardDetail },\n    mixins: [CardRecomMixin],\n    props: {\n        startPoint: String,\n        endPoint: String,\n        memHome: String,\n        memYoungY: Boolean,\n        memYoungN: Boolean,\n        memSubsidiaryYn: Boolean\n    },\n    data() {\n        return {\n            localStartPoint: this.startPoint,  // propsÎ°úÎ∂ÄÌÑ∞ Îç∞Ïù¥ÌÑ∞Î•º dataÎ°ú ÏÑ§Ï†ï\n            localEndPoint: this.endPoint,      // propsÎ°úÎ∂ÄÌÑ∞ Îç∞Ïù¥ÌÑ∞Î•º dataÎ°ú ÏÑ§Ï†ï\n            routes: JSON.parse(this.$route.query.routes || '[]'),  // queryÎ°úÎ∂ÄÌÑ∞ routes ÌååÏã±\n            isModalVisible: false,\n            selectedCard: null,\n        };\n    },\n    methods: {\n        openModal(card) {\n            this.selectedCard = card;\n            this.isModalVisible = true;\n            },\n        closeModal() {\n            this.isModalVisible = false;\n        }\n    },\n    watch: {\n        startPoint(newVal) {\n            this.localStartPoint = newVal;\n        },\n        endPoint(newVal) {\n            this.localEndPoint = newVal;\n        }\n    },\n    mounted() {\n        console.log('Received routes:', this.routes);\n    }\n};\n</script>\n\n<style scoped src=\"../assets/css/CardRecom.css\"></style>\n"],"mappings":"AA4FA,OAAOA,UAAS,MAAO,kBAAkB;AACzC,OAAOC,cAAa,MAAO,2BAA2B;AAEtD,eAAe;EACXC,IAAI,EAAE,WAAW;EACjBC,UAAU,EAAE;IAAEH;EAAW,CAAC;EAC1BI,MAAM,EAAE,CAACH,cAAc,CAAC;EACxBI,KAAK,EAAE;IACHC,UAAU,EAAEC,MAAM;IAClBC,QAAQ,EAAED,MAAM;IAChBE,OAAO,EAAEF,MAAM;IACfG,SAAS,EAAEC,OAAO;IAClBC,SAAS,EAAED,OAAO;IAClBE,eAAe,EAAEF;EACrB,CAAC;EACDG,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,eAAe,EAAE,IAAI,CAACT,UAAU;MAAG;MACnCU,aAAa,EAAE,IAAI,CAACR,QAAQ;MAAO;MACnCS,MAAM,EAAEC,IAAI,CAACC,KAAK,CAAC,IAAI,CAACC,MAAM,CAACC,KAAK,CAACJ,MAAK,IAAK,IAAI,CAAC;MAAG;MACvDK,cAAc,EAAE,KAAK;MACrBC,YAAY,EAAE;IAClB,CAAC;EACL,CAAC;EACDC,OAAO,EAAE;IACLC,SAASA,CAACC,IAAI,EAAE;MACZ,IAAI,CAACH,YAAW,GAAIG,IAAI;MACxB,IAAI,CAACJ,cAAa,GAAI,IAAI;IAC1B,CAAC;IACLK,UAAUA,CAAA,EAAG;MACT,IAAI,CAACL,cAAa,GAAI,KAAK;IAC/B;EACJ,CAAC;EACDM,KAAK,EAAE;IACHtB,UAAUA,CAACuB,MAAM,EAAE;MACf,IAAI,CAACd,eAAc,GAAIc,MAAM;IACjC,CAAC;IACDrB,QAAQA,CAACqB,MAAM,EAAE;MACb,IAAI,CAACb,aAAY,GAAIa,MAAM;IAC/B;EACJ,CAAC;EACDC,OAAOA,CAAA,EAAG;IACNC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAE,IAAI,CAACf,MAAM,CAAC;EAChD;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}