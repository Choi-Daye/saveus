{"ast":null,"code":"import axios from 'axios';\nimport MapView from '../../components/MapView.vue'; // MapView 컴포넌트를 임포트합니다.\n\nfunction getCookie(name) {\n  let cookieValue = null;\n  if (document.cookie && document.cookie !== '') {\n    const cookies = document.cookie.split(';');\n    for (let i = 0; i < cookies.length; i++) {\n      const cookie = cookies[i].trim();\n      if (cookie.substring(0, name.length + 1) === name + '=') {\n        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n        break;\n      }\n    }\n  }\n  return cookieValue;\n}\nexport default {\n  components: {\n    MapView\n  },\n  data() {\n    return {\n      showMapApi: false,\n      // showMapApi를 data 객체에 정의합니다.\n      showCheckButton: false,\n      inputs: {\n        mem_home: '',\n        start_point: '',\n        end_point: '',\n        mem_young_y: false,\n        mem_young_n: false,\n        mem_subsidiary_yn: false\n      },\n      formData: {\n        mem_home: '',\n        start_point: '',\n        end_point: '',\n        mem_young_y: false,\n        mem_young_n: false,\n        mem_subsidiary_yn: false\n      },\n      csrfToken: getCookie('csrftoken') // CSRF 토큰을 저장할 변수\n    };\n  },\n  methods: {\n    getCsrfToken() {\n      const apiBaseUrl = process.env.VUE_APP_API_BASE_URL;\n      console.log('mainone.js API Base URL:', apiBaseUrl); // API Base URL을 콘솔에 출력하여 확인\n      axios.get(`${apiBaseUrl}/map/set-csrf-token`).then(response => {\n        console.log('mainone.js CSRF token set successfully.');\n        console.log('mainone.js Response data : ', '\\n', response.data);\n        this.csrfToken = response.data.csrfToken;\n        console.log('mainone.js CSRF 토큰:', this.csrfToken);\n      }).catch(error => {\n        console.error('mainone.js Error setting CSRF token:', error);\n      });\n    },\n    handleCheckboxChange(field) {\n      if (field === 'mem_young_y') {\n        this.inputs.mem_young_y = true;\n        this.inputs.mem_young_n = false;\n      } else if (field === 'mem_young_n') {\n        this.inputs.mem_young_n = true;\n        this.inputs.mem_young_y = false;\n      }\n    },\n    handleSubmit() {\n      // 모든 필드가 채워져 있는지 확인\n      if (!this.inputs.mem_home || !this.inputs.start_point || !this.inputs.end_point) {\n        alert('거주지와 출발지/도착지의 모든 필드를 채워주세요.');\n        return;\n      }\n\n      // 적어도 하나의 체크박스가 선택되었는지 확인\n      if (!this.inputs.mem_young_y && !this.inputs.mem_young_n) {\n        alert('연령대 중 적어도 하나를 선택해야 합니다.');\n        return;\n      }\n      this.formData = {\n        ...this.inputs\n      };\n      console.log(\"mainone.js 제출된 데이터:\", this.formData);\n      console.log(\"mainone.js CSRF 토큰:\", this.csrfToken);\n      const apiBaseUrl = process.env.VUE_APP_API_BASE_URL;\n      const url = `${apiBaseUrl}/map/api/data`; // Django의 API 엔드포인트 URL\n\n      // 최신 CSRF 토큰을 사용하도록 수정\n      this.csrfToken = getCookie('csrftoken');\n      axios.post(url, this.formData, {\n        headers: {\n          'Content-Type': 'application/json',\n          'X-CSRFToken': this.csrfToken\n        }\n      }).then(response => {\n        this.formData = response.data; // 응답 데이터를 formData에 저장\n        this.showMapApi = true;\n        this.showCheckButton = true;\n        console.log(\"서버 응답:\", response.data);\n      }).catch(error => {\n        if (error.response) {\n          console.error(\"서버 응답 오류:\", error.response.data);\n          console.error(\"상태 코드:\", error.response.status);\n          console.error(\"헤더:\", error.response.headers);\n        } else if (error.request) {\n          console.error(\"요청 오류:\", error.request);\n        } else {\n          console.error(\"설정 오류:\", error.message);\n        }\n        console.error(\"설정:\", error.config);\n      });\n    }\n  },\n  mounted() {\n    this.getCsrfToken();\n  }\n};","map":{"version":3,"names":["axios","MapView","getCookie","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","components","data","showMapApi","showCheckButton","inputs","mem_home","start_point","end_point","mem_young_y","mem_young_n","mem_subsidiary_yn","formData","csrfToken","methods","getCsrfToken","apiBaseUrl","process","env","VUE_APP_API_BASE_URL","console","log","get","then","response","catch","error","handleCheckboxChange","field","handleSubmit","alert","url","post","headers","status","request","message","config","mounted"],"sources":["/Users/parkjiyoung/Desktop/computer/smart_injae/hackshim_project/saveus_proto/saveus/frontend/src/assets/js/MainOne.js"],"sourcesContent":["import axios from 'axios';\nimport MapView from '../../components/MapView.vue'; // MapView 컴포넌트를 임포트합니다.\n\nfunction getCookie(name) {\n    let cookieValue = null;\n    if (document.cookie && document.cookie !== '') {\n        const cookies = document.cookie.split(';');\n        for (let i = 0; i < cookies.length; i++) {\n            const cookie = cookies[i].trim();\n            if (cookie.substring(0, name.length + 1) === (name + '=')) {\n                cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n                break;\n            }\n        }\n    }\n    return cookieValue;\n}\n\nexport default {\n    components: {\n        MapView\n    },\n    data() {\n        return {\n            showMapApi: false, // showMapApi를 data 객체에 정의합니다.\n            showCheckButton: false,\n            inputs: {\n                mem_home: '',\n                start_point: '',\n                end_point: '',\n                mem_young_y: false,\n                mem_young_n: false,\n                mem_subsidiary_yn: false\n            },\n            formData: {\n                mem_home: '',\n                start_point: '',\n                end_point: '',\n                mem_young_y: false,\n                mem_young_n: false,\n                mem_subsidiary_yn: false\n            },\n            csrfToken: getCookie('csrftoken')  // CSRF 토큰을 저장할 변수\n        };\n    },\n    methods: {\n        getCsrfToken() {\n            const apiBaseUrl = process.env.VUE_APP_API_BASE_URL;\n            console.log('mainone.js API Base URL:', apiBaseUrl);  // API Base URL을 콘솔에 출력하여 확인\n            axios.get(`${apiBaseUrl}/map/set-csrf-token`)\n                .then(response => {\n                    console.log('mainone.js CSRF token set successfully.');\n                    console.log('mainone.js Response data : ', '\\n',response.data)\n                    this.csrfToken = response.data.csrfToken ;\n                    console.log('mainone.js CSRF 토큰:', this.csrfToken);\n                })\n                .catch(error => {\n                    console.error('mainone.js Error setting CSRF token:', error);\n                });\n        },\n\n        handleCheckboxChange(field) {\n            if (field === 'mem_young_y') {\n                this.inputs.mem_young_y = true;\n                this.inputs.mem_young_n = false;\n            } else if (field === 'mem_young_n') {\n                this.inputs.mem_young_n = true;\n                this.inputs.mem_young_y = false;\n            }\n        },\n\n        handleSubmit() {\n            // 모든 필드가 채워져 있는지 확인\n            if (!this.inputs.mem_home || !this.inputs.start_point || !this.inputs.end_point) {\n                alert('거주지와 출발지/도착지의 모든 필드를 채워주세요.');\n                return;\n            }\n\n            // 적어도 하나의 체크박스가 선택되었는지 확인\n            if (!this.inputs.mem_young_y && !this.inputs.mem_young_n) {\n                alert('연령대 중 적어도 하나를 선택해야 합니다.');\n                return;\n            }\n\n            this.formData = { ...this.inputs };\n            console.log(\"mainone.js 제출된 데이터:\", this.formData);\n            console.log(\"mainone.js CSRF 토큰:\", this.csrfToken);\n\n            const apiBaseUrl = process.env.VUE_APP_API_BASE_URL;\n            const url = `${apiBaseUrl}/map/api/data`; // Django의 API 엔드포인트 URL\n\n            // 최신 CSRF 토큰을 사용하도록 수정\n            this.csrfToken = getCookie('csrftoken');\n\n            axios.post(url, this.formData, {\n                headers: {\n                    'Content-Type': 'application/json',\n                    'X-CSRFToken': this.csrfToken\n                }\n            })\n            .then(response => {\n                this.formData = response.data; // 응답 데이터를 formData에 저장\n                this.showMapApi = true;\n                this.showCheckButton = true;\n                console.log(\"서버 응답:\", response.data);\n            })\n            .catch(error => {\n                if (error.response) {\n                    console.error(\"서버 응답 오류:\", error.response.data);\n                    console.error(\"상태 코드:\", error.response.status);\n                    console.error(\"헤더:\", error.response.headers);\n                } else if (error.request) {\n                    console.error(\"요청 오류:\", error.request);\n                } else {\n                    console.error(\"설정 오류:\", error.message);\n                }\n                console.error(\"설정:\", error.config);\n            });\n        },\n    },\n    mounted() {\n        this.getCsrfToken();\n    },\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}