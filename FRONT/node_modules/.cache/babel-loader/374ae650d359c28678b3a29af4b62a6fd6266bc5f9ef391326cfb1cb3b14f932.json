{"ast":null,"code":"// src/utils/WebSocketClient.js\n\nexport default class WebSocketClient {\n  constructor(url) {\n    this.url = url;\n    this.socket = null;\n  }\n  connect() {\n    this.socket = new WebSocket(this.url);\n    this.socket.onopen = () => {\n      console.log('WebSocket connection established');\n    };\n    this.socket.onclose = () => {\n      console.log('WebSocket connection closed');\n    };\n    this.socket.onerror = error => {\n      console.error('WebSocket error:', error);\n    };\n  }\n  send(data) {\n    if (this.socket.readyState === WebSocket.OPEN) {\n      this.socket.send(JSON.stringify(data));\n    } else {\n      console.error('WebSocket is not open');\n    }\n  }\n  onMessage(callback) {\n    this.socket.onmessage = event => {\n      const data = JSON.parse(event.data);\n      callback(data);\n    };\n  }\n}","map":{"version":3,"names":["WebSocketClient","constructor","url","socket","connect","WebSocket","onopen","console","log","onclose","onerror","error","send","data","readyState","OPEN","JSON","stringify","onMessage","callback","onmessage","event","parse"],"sources":["/Users/parkjiyoung/Desktop/computer/smart_injae/hackshim_project/saveus_proto/saveus/frontend/src/utils/WebSocketClient.js"],"sourcesContent":["// src/utils/WebSocketClient.js\n\nexport default class WebSocketClient {\n    constructor(url) {\n        this.url = url;\n        this.socket = null;\n    }\n\n    connect() {\n        this.socket = new WebSocket(this.url);\n        this.socket.onopen = () => {\n            console.log('WebSocket connection established');\n        };\n        this.socket.onclose = () => {\n            console.log('WebSocket connection closed');\n        };\n        this.socket.onerror = (error) => {\n            console.error('WebSocket error:', error);\n        };\n    }\n\n    send(data) {\n        if (this.socket.readyState === WebSocket.OPEN) {\n            this.socket.send(JSON.stringify(data));\n        } else {\n            console.error('WebSocket is not open');\n        }\n    }\n\n    onMessage(callback) {\n        this.socket.onmessage = (event) => {\n            const data = JSON.parse(event.data);\n            callback(data);\n        };\n    }\n}\n"],"mappings":"AAAA;;AAEA,eAAe,MAAMA,eAAe,CAAC;EACjCC,WAAWA,CAACC,GAAG,EAAE;IACb,IAAI,CAACA,GAAG,GAAGA,GAAG;IACd,IAAI,CAACC,MAAM,GAAG,IAAI;EACtB;EAEAC,OAAOA,CAAA,EAAG;IACN,IAAI,CAACD,MAAM,GAAG,IAAIE,SAAS,CAAC,IAAI,CAACH,GAAG,CAAC;IACrC,IAAI,CAACC,MAAM,CAACG,MAAM,GAAG,MAAM;MACvBC,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAC;IACnD,CAAC;IACD,IAAI,CAACL,MAAM,CAACM,OAAO,GAAG,MAAM;MACxBF,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;IAC9C,CAAC;IACD,IAAI,CAACL,MAAM,CAACO,OAAO,GAAIC,KAAK,IAAK;MAC7BJ,OAAO,CAACI,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAAC;IAC5C,CAAC;EACL;EAEAC,IAAIA,CAACC,IAAI,EAAE;IACP,IAAI,IAAI,CAACV,MAAM,CAACW,UAAU,KAAKT,SAAS,CAACU,IAAI,EAAE;MAC3C,IAAI,CAACZ,MAAM,CAACS,IAAI,CAACI,IAAI,CAACC,SAAS,CAACJ,IAAI,CAAC,CAAC;IAC1C,CAAC,MAAM;MACHN,OAAO,CAACI,KAAK,CAAC,uBAAuB,CAAC;IAC1C;EACJ;EAEAO,SAASA,CAACC,QAAQ,EAAE;IAChB,IAAI,CAAChB,MAAM,CAACiB,SAAS,GAAIC,KAAK,IAAK;MAC/B,MAAMR,IAAI,GAAGG,IAAI,CAACM,KAAK,CAACD,KAAK,CAACR,IAAI,CAAC;MACnCM,QAAQ,CAACN,IAAI,CAAC;IAClB,CAAC;EACL;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}