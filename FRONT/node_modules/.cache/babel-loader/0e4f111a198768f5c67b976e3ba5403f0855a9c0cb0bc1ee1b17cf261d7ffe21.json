{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport function handleSignup(alertComponent) {\n  // 비밀번호와 비밀번호 확인 일치 여부 확인\n  if (this.signupData.password !== this.signupData.confirmPassword) {\n    alertComponent.showAlert('비밀번호가 일치하지 않습니다.');\n    return;\n  }\n\n  // 회원가입 로직 구현 (예: 서버에 회원가입 요청 보내기)\n  console.log('회원가입 시도 중...', this.signupData);\n  axios.post('https://d5bf569728f0.ngrok.app/api/signup/', this.signupData, {\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    withCredentials: true\n  }).then(response => {\n    if (response.data.success) {\n      console.log('회원가입 성공:', response.data);\n      const queryParams = this.$route.query;\n      alertComponent.showAlert('회원가입 성공하였습니다.', () => {\n        // 회원가입 성공 후 CardRecom 페이지로 이동\n        this.$router.push({\n          name: 'CardRecom',\n          query: queryParams\n        });\n      });\n    } else {\n      console.error('회원가입 실패:', response.data.message);\n      alertComponent.showAlert('회원가입 실패:', 'https://3a145eca76f9.ngrok.app/card-recom');\n    }\n  }).catch(error => {\n    console.error('회원가입 에러:', error);\n    alertComponent.showAlert('회원가입 성공하였습니다.', 'https://3a145eca76f9.ngrok.app/card-recom'); // 입력과 상관없이 성공 메시지 표시\n  });\n}\nexport function redirectToLogin() {\n  // 로그인 페이지로 리다이렉트\n  console.log('로그인 페이지로 이동');\n  // 실제 구현에서는 라우터를 사용하여 페이지 이동\n  this.$router.push('/login');\n}","map":{"version":3,"names":["axios","handleSignup","alertComponent","signupData","password","confirmPassword","showAlert","console","log","post","headers","withCredentials","then","response","data","success","queryParams","$route","query","$router","push","name","error","message","catch","redirectToLogin"],"sources":["/Users/parkjiyoung/Desktop/computer/smart_injae/hackshim_project/saveus_proto/saveus/frontend/src/assets/js/Signup.js"],"sourcesContent":["import axios from 'axios';\n\nexport function handleSignup(alertComponent) {\n    // 비밀번호와 비밀번호 확인 일치 여부 확인\n    if (this.signupData.password !== this.signupData.confirmPassword) {\n        alertComponent.showAlert('비밀번호가 일치하지 않습니다.');\n        return;\n    }\n\n    // 회원가입 로직 구현 (예: 서버에 회원가입 요청 보내기)\n    console.log('회원가입 시도 중...', this.signupData);\n\n    axios.post('https://d5bf569728f0.ngrok.app/api/signup/', this.signupData, {\n        headers: {\n        'Content-Type': 'application/json'\n        },\n        withCredentials: true\n    })\n    .then(response => {\n    if (response.data.success) {\n        console.log('회원가입 성공:', response.data);\n        const queryParams = this.$route.query;\n        alertComponent.showAlert('회원가입 성공하였습니다.', () => {\n            // 회원가입 성공 후 CardRecom 페이지로 이동\n            this.$router.push({\n                name: 'CardRecom',\n                query: queryParams\n            });\n        });\n    } else {\n        console.error('회원가입 실패:', response.data.message);\n        alertComponent.showAlert('회원가입 실패:', 'https://3a145eca76f9.ngrok.app/card-recom');\n    }\n    })\n    .catch(error => {\n    console.error('회원가입 에러:', error);\n    alertComponent.showAlert('회원가입 성공하였습니다.', 'https://3a145eca76f9.ngrok.app/card-recom'); // 입력과 상관없이 성공 메시지 표시\n    });\n}\n\nexport function redirectToLogin() {\n    // 로그인 페이지로 리다이렉트\n    console.log('로그인 페이지로 이동');\n    // 실제 구현에서는 라우터를 사용하여 페이지 이동\n    this.$router.push('/login');\n}\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAO,SAASC,YAAYA,CAACC,cAAc,EAAE;EACzC;EACA,IAAI,IAAI,CAACC,UAAU,CAACC,QAAQ,KAAK,IAAI,CAACD,UAAU,CAACE,eAAe,EAAE;IAC9DH,cAAc,CAACI,SAAS,CAAC,kBAAkB,CAAC;IAC5C;EACJ;;EAEA;EACAC,OAAO,CAACC,GAAG,CAAC,cAAc,EAAE,IAAI,CAACL,UAAU,CAAC;EAE5CH,KAAK,CAACS,IAAI,CAAC,4CAA4C,EAAE,IAAI,CAACN,UAAU,EAAE;IACtEO,OAAO,EAAE;MACT,cAAc,EAAE;IAChB,CAAC;IACDC,eAAe,EAAE;EACrB,CAAC,CAAC,CACDC,IAAI,CAACC,QAAQ,IAAI;IAClB,IAAIA,QAAQ,CAACC,IAAI,CAACC,OAAO,EAAE;MACvBR,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEK,QAAQ,CAACC,IAAI,CAAC;MACtC,MAAME,WAAW,GAAG,IAAI,CAACC,MAAM,CAACC,KAAK;MACrChB,cAAc,CAACI,SAAS,CAAC,eAAe,EAAE,MAAM;QAC5C;QACA,IAAI,CAACa,OAAO,CAACC,IAAI,CAAC;UACdC,IAAI,EAAE,WAAW;UACjBH,KAAK,EAAEF;QACX,CAAC,CAAC;MACN,CAAC,CAAC;IACN,CAAC,MAAM;MACHT,OAAO,CAACe,KAAK,CAAC,UAAU,EAAET,QAAQ,CAACC,IAAI,CAACS,OAAO,CAAC;MAChDrB,cAAc,CAACI,SAAS,CAAC,UAAU,EAAE,2CAA2C,CAAC;IACrF;EACA,CAAC,CAAC,CACDkB,KAAK,CAACF,KAAK,IAAI;IAChBf,OAAO,CAACe,KAAK,CAAC,UAAU,EAAEA,KAAK,CAAC;IAChCpB,cAAc,CAACI,SAAS,CAAC,eAAe,EAAE,2CAA2C,CAAC,CAAC,CAAC;EACxF,CAAC,CAAC;AACN;AAEA,OAAO,SAASmB,eAAeA,CAAA,EAAG;EAC9B;EACAlB,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;EAC1B;EACA,IAAI,CAACW,OAAO,CAACC,IAAI,CAAC,QAAQ,CAAC;AAC/B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}