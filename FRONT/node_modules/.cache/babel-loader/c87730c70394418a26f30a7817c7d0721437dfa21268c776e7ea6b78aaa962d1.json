{"ast":null,"code":"import axios from 'axios';\nimport { getCsrfToken } from './csrfToken.js';\nconst axiosInstance = axios.create({\n  baseURL: 'https://d5bf569728f0.ngrok.app',\n  withCredentials: true\n});\naxiosInstance.interceptors.request.use(async config => {\n  try {\n    const token = await getCsrfToken();\n    config.headers['X-CSRFToken'] = token;\n    console.log('CardRecom.js >> CSRF token set in request headers:', token);\n    return config;\n  } catch (error) {\n    console.error('CardRecom.js >> Failed to set CSRF token in request headers:', error);\n    return Promise.reject(error);\n  }\n});\nconst CardRecomMixin = {\n  props: {\n    memHome: String,\n    startPoint: String,\n    // 수정된 부분\n    endPoint: String,\n    // 수정된 부분\n    memYoungY: Boolean,\n    memYoungN: Boolean,\n    memSubsidiaryYn: Boolean\n  },\n  data() {\n    return {\n      localStartPoint: this.startPoint,\n      // 수정된 부분\n      localEndPoint: this.endPoint,\n      // 수정된 부분\n      routes: [],\n      wsClient: null,\n      cards: [{\n        id: 1,\n        imgSrc: require('../img/cards/광주은행_신용_후불.png'),\n        altText: \"광주은행_신용_후불\",\n        link: \"/card-detail/1\"\n      }, {\n        id: 2,\n        imgSrc: require('../img/cards/기업은행_신용_후불.webp'),\n        altText: \"기업은행_신용_후불\",\n        link: \"/card-detail/2\"\n      }, {\n        id: 3,\n        imgSrc: require('../img/cards/기업은행_체크_후불.webp'),\n        altText: \"기업은행_체크_후불\",\n        link: \"/card-detail/3\"\n      }, {\n        id: 4,\n        imgSrc: require('../img/cards/기후동행카드.png'),\n        altText: \"기후동행카드\",\n        link: \"/card-detail/4\"\n      }, {\n        id: 5,\n        imgSrc: require('../img/cards/농협_체크_후불.webp'),\n        altText: \"농협_체크_후불\",\n        link: \"/card-detail/5\"\n      }, {\n        id: 6,\n        imgSrc: require('../img/cards/농협카드_신용_후불.webp'),\n        altText: \"농협카드_신용_후불\",\n        link: \"/card-detail/6\"\n      }, {\n        id: 7,\n        imgSrc: require('../img/cards/바로카드_신용_후불.png'),\n        altText: \"바로카드_신용_후불\",\n        link: \"/card-detail/7\"\n      }, {\n        id: 8,\n        imgSrc: require('../img/cards/삼성카드_신용_후불.gif'),\n        altText: \"삼성카드_신용_후불\",\n        link: \"/card-detail/8\"\n      }, {\n        id: 9,\n        imgSrc: require('../img/cards/신한_신용_후불.webp'),\n        altText: \"신한_신용_후불\",\n        link: \"/card-detail/9\"\n      }, {\n        id: 10,\n        imgSrc: require('../img/cards/신한카드_신용_후불_모바일.webp'),\n        altText: \"신한카드_신용_후불_모바일\",\n        link: \"/card-detail/10\"\n      }, {\n        id: 11,\n        imgSrc: require('../img/cards/신한카드_체크_후불.webp'),\n        altText: \"신한카드_체크_후불\",\n        link: \"/card-detail/11\"\n      }, {\n        id: 12,\n        imgSrc: require('../img/cards/우리카드_신용_후불.webp'),\n        altText: \"우리카드_신용_후불\",\n        link: \"/card-detail/12\"\n      }, {\n        id: 13,\n        imgSrc: require('../img/cards/우리카드_체크_후불.webp'),\n        altText: \"우리카드_체크_후불\",\n        link: \"/card-detail/13\"\n      }, {\n        id: 14,\n        imgSrc: require('../img/cards/이동의즐거움_선불_모바일.jpg'),\n        altText: \"이동의즐거움_선불_모바일\",\n        link: \"/card-detail/14\"\n      }, {\n        id: 15,\n        imgSrc: require('../img/cards/이동의즐거움_선불.gif'),\n        altText: \"이동의즐거움_선불\",\n        link: \"/card-detail/15\"\n      }, {\n        id: 16,\n        imgSrc: require('../img/cards/카카오페이_선불_모바일.webp'),\n        altText: \"카카오페이_선불_모바일\",\n        link: \"/card-detail/16\"\n      }, {\n        id: 17,\n        imgSrc: require('../img/cards/케이뱅크_체크_후불.webp'),\n        altText: \"케이뱅크_체크_후불\",\n        link: \"/card-detail/17\"\n      }, {\n        id: 18,\n        imgSrc: require('../img/cards/하나_신용_후불.webp'),\n        altText: \"하나_신용_후불\",\n        link: \"/card-detail/18\"\n      }, {\n        id: 19,\n        imgSrc: require('../img/cards/하나카드_체크_후불.webp'),\n        altText: \"하나카드_체크_후불\",\n        link: \"/card-detail/19\"\n      }, {\n        id: 20,\n        imgSrc: require('../img/cards/DGB유페이_선불_모바일.webp'),\n        altText: \"DGB유페이_선불_모바일\",\n        link: \"/card-detail/20\"\n      }, {\n        id: 21,\n        imgSrc: require('../img/cards/DGB유페이_선불_실물.webp'),\n        altText: \"DGB유페이_선불_실물\",\n        link: \"/card-detail/21\"\n      }, {\n        id: 22,\n        imgSrc: require('../img/cards/KB국민카드_신용_후불.webp'),\n        altText: \"KB국민카드_신용_후불\",\n        link: \"/card-detail/22\"\n      }, {\n        id: 23,\n        imgSrc: require('../img/cards/KB국민카드_체크_후불.webp'),\n        altText: \"KB국민카드_체크_후불\",\n        link: \"/card-detail/23\"\n      }]\n    };\n  },\n  watch: {\n    startPoint(newStartPoint) {\n      // 수정된 부분\n      this.localStartPoint = newStartPoint;\n    },\n    endPoint(newEndPoint) {\n      // 수정된 부분\n      this.localEndPoint = newEndPoint;\n    }\n  },\n  methods: {\n    async geocode(address) {\n      try {\n        console.log('CardRecom.js >> Geocoding address:', address);\n        const response = await axiosInstance.get('/odsay/geocode/', {\n          params: {\n            address\n          }\n        });\n        console.log('CardRecom.js >> Geocode response:', response.data);\n        return response.data;\n      } catch (error) {\n        console.error('CardRecom.js >> Error geocoding address:', error);\n        if (error.response) {\n          console.error('CardRecom.js >> Error response data:', error.response.data);\n        }\n        throw error;\n      }\n    },\n    async findRoute() {\n      try {\n        console.log('CardRecom.js >> Finding route with start point:', this.localStartPoint, 'and end point:', this.localEndPoint);\n        const startResponse = await this.geocode(this.localStartPoint);\n        console.log('CardRecom.js >> Start geocode response:', startResponse);\n        const endResponse = await this.geocode(this.localEndPoint);\n        console.log('CardRecom.js >> End geocode response:', endResponse);\n        if (!startResponse || !endResponse) {\n          throw new Error('Failed to get coordinates');\n        }\n        const sx = startResponse.x;\n        const sy = startResponse.y;\n        const ex = endResponse.x;\n        const ey = endResponse.y;\n        console.log('CardRecom.js >> Start coordinates:', {\n          sx,\n          sy\n        });\n        console.log('CardRecom.js >> End coordinates:', {\n          ex,\n          ey\n        });\n        const odsasApiUrl = `searchPubTransPathT?SX=${sx}&SY=${sy}&EX=${ex}&EY=${ey}&apiKey=${encodeURIComponent(process.env.VUE_APP_ODSAY_API_KEY)}`;\n        console.log('CardRecom.js >> ODSAY API request URL:', odsasApiUrl);\n        const routeResponse = await this.$odsayAxios.get(odsasApiUrl);\n        console.log('CardRecom.js >> ODSAY API response:', routeResponse.data);\n        if (routeResponse.data && routeResponse.data.result && routeResponse.data.result.path) {\n          this.routes = routeResponse.data.result.path.map(path => {\n            return {\n              totalTime: path.info.totalTime,\n              totalWalk: path.info.totalWalk,\n              busTransitCount: path.info.busTransitCount,\n              subwayTransitCount: path.info.subwayTransitCount,\n              payment: path.info.payment,\n              totalDistance: path.info.totalDistance,\n              firstStartStation: path.subPath[0].startName,\n              startNameKor: path.subPath[0].startName,\n              endName: path.subPath[path.subPath.length - 1].endName,\n              lastEndStation: path.subPath[path.subPath.length - 1].endName,\n              subPaths: path.subPath,\n              mapObj: path.info.mapObj,\n              sx: sx,\n              sy: sy,\n              ex: ex,\n              ey: ey\n            };\n          });\n        } else {\n          console.error('CardRecom.js >> No valid route found');\n        }\n      } catch (error) {\n        console.error('CardRecom.js >> Error finding route:', error);\n      }\n    },\n    getTrafficClass(subPath) {\n      if (subPath.trafficType === 1) {\n        return 'bus';\n      } else if (subPath.trafficType === 2) {\n        return `sub${subPath.lane[0].subwayCode}`;\n      } else {\n        return 'walk';\n      }\n    },\n    formatTime(minutes) {\n      const hours = Math.floor(minutes / 60);\n      const mins = minutes % 60;\n      return `${hours}시간 ${mins}분`;\n    },\n    getLineClass(trafficType, subwaycode) {\n      if (trafficType === 1) {\n        return 'bus';\n      } else if (trafficType === 2) {\n        return `sub${subwaycode}`;\n      } else {\n        return 'walk';\n      }\n    },\n    getAction(subPath, startName, lane) {\n      if (subPath.trafficType === 1) {\n        return `지하철 ${lane.map(l => l.name).join(', ')} - ${startName}역`;\n      } else if (subPath.trafficType === 2) {\n        return `버스 ${lane.map(l => l.busNo).join(', ')} 번 - ${startName}`;\n      } else {\n        return `도보 - ${startName}`;\n      }\n    }\n  }\n};\nexport default CardRecomMixin;","map":{"version":3,"names":["axios","getCsrfToken","axiosInstance","create","baseURL","withCredentials","interceptors","request","use","config","token","headers","console","log","error","Promise","reject","CardRecomMixin","props","memHome","String","startPoint","endPoint","memYoungY","Boolean","memYoungN","memSubsidiaryYn","data","localStartPoint","localEndPoint","routes","wsClient","cards","id","imgSrc","require","altText","link","watch","newStartPoint","newEndPoint","methods","geocode","address","response","get","params","findRoute","startResponse","endResponse","Error","sx","x","sy","y","ex","ey","odsasApiUrl","encodeURIComponent","process","env","VUE_APP_ODSAY_API_KEY","routeResponse","$odsayAxios","result","path","map","totalTime","info","totalWalk","busTransitCount","subwayTransitCount","payment","totalDistance","firstStartStation","subPath","startName","startNameKor","endName","length","lastEndStation","subPaths","mapObj","getTrafficClass","trafficType","lane","subwayCode","formatTime","minutes","hours","Math","floor","mins","getLineClass","subwaycode","getAction","l","name","join","busNo"],"sources":["/Users/parkjiyoung/Desktop/computer/smart_injae/hackshim_project/saveus_proto/saveus/frontend/src/assets/js/CardRecom.js"],"sourcesContent":["import axios from 'axios';\nimport { getCsrfToken } from './csrfToken.js';\n\nconst axiosInstance = axios.create({\n    baseURL: 'https://d5bf569728f0.ngrok.app',\n    withCredentials: true\n});\n\naxiosInstance.interceptors.request.use(async (config) => {\n    try {\n        const token = await getCsrfToken();\n        config.headers['X-CSRFToken'] = token;\n        console.log('CardRecom.js >> CSRF token set in request headers:', token);\n        return config;\n    } catch (error) {\n        console.error('CardRecom.js >> Failed to set CSRF token in request headers:', error);\n        return Promise.reject(error);\n    }\n});\n\nconst CardRecomMixin = {\n    props: {\n        memHome: String,\n        startPoint: String,  // 수정된 부분\n        endPoint: String,    // 수정된 부분\n        memYoungY: Boolean,\n        memYoungN: Boolean,\n        memSubsidiaryYn: Boolean\n    },\n    data() {\n        return {\n            localStartPoint: this.startPoint,  // 수정된 부분\n            localEndPoint: this.endPoint,      // 수정된 부분\n            routes: [],\n            wsClient: null,\n            cards: [\n                { id: 1, imgSrc: require('../img/cards/광주은행_신용_후불.png'), altText: \"광주은행_신용_후불\", link: \"/card-detail/1\" },\n                { id: 2, imgSrc: require('../img/cards/기업은행_신용_후불.webp'), altText: \"기업은행_신용_후불\", link: \"/card-detail/2\" },\n                { id: 3, imgSrc: require('../img/cards/기업은행_체크_후불.webp'), altText: \"기업은행_체크_후불\", link: \"/card-detail/3\" },\n                { id: 4, imgSrc: require('../img/cards/기후동행카드.png'), altText: \"기후동행카드\", link: \"/card-detail/4\" },\n                { id: 5, imgSrc: require('../img/cards/농협_체크_후불.webp'), altText: \"농협_체크_후불\", link: \"/card-detail/5\" },\n                { id: 6, imgSrc: require('../img/cards/농협카드_신용_후불.webp'), altText: \"농협카드_신용_후불\", link: \"/card-detail/6\" },\n                { id: 7, imgSrc: require('../img/cards/바로카드_신용_후불.png'), altText: \"바로카드_신용_후불\", link: \"/card-detail/7\" },\n                { id: 8, imgSrc: require('../img/cards/삼성카드_신용_후불.gif'), altText: \"삼성카드_신용_후불\", link: \"/card-detail/8\" },\n                { id: 9, imgSrc: require('../img/cards/신한_신용_후불.webp'), altText: \"신한_신용_후불\", link: \"/card-detail/9\" },\n                { id: 10, imgSrc: require('../img/cards/신한카드_신용_후불_모바일.webp'), altText: \"신한카드_신용_후불_모바일\", link: \"/card-detail/10\" },\n                { id: 11, imgSrc: require('../img/cards/신한카드_체크_후불.webp'), altText: \"신한카드_체크_후불\", link: \"/card-detail/11\" },\n                { id: 12, imgSrc: require('../img/cards/우리카드_신용_후불.webp'), altText: \"우리카드_신용_후불\", link: \"/card-detail/12\" },\n                { id: 13, imgSrc: require('../img/cards/우리카드_체크_후불.webp'), altText: \"우리카드_체크_후불\", link: \"/card-detail/13\" },\n                { id: 14, imgSrc: require('../img/cards/이동의즐거움_선불_모바일.jpg'), altText: \"이동의즐거움_선불_모바일\", link: \"/card-detail/14\" },\n                { id: 15, imgSrc: require('../img/cards/이동의즐거움_선불.gif'), altText: \"이동의즐거움_선불\", link: \"/card-detail/15\" },\n                { id: 16, imgSrc: require('../img/cards/카카오페이_선불_모바일.webp'), altText: \"카카오페이_선불_모바일\", link: \"/card-detail/16\" },\n                { id: 17, imgSrc: require('../img/cards/케이뱅크_체크_후불.webp'), altText: \"케이뱅크_체크_후불\", link: \"/card-detail/17\" },\n                { id: 18, imgSrc: require('../img/cards/하나_신용_후불.webp'), altText: \"하나_신용_후불\", link: \"/card-detail/18\" },\n                { id: 19, imgSrc: require('../img/cards/하나카드_체크_후불.webp'), altText: \"하나카드_체크_후불\", link: \"/card-detail/19\" },\n                { id: 20, imgSrc: require('../img/cards/DGB유페이_선불_모바일.webp'), altText: \"DGB유페이_선불_모바일\", link: \"/card-detail/20\" },\n                { id: 21, imgSrc: require('../img/cards/DGB유페이_선불_실물.webp'), altText: \"DGB유페이_선불_실물\", link: \"/card-detail/21\" },\n                { id: 22, imgSrc: require('../img/cards/KB국민카드_신용_후불.webp'), altText: \"KB국민카드_신용_후불\", link: \"/card-detail/22\" },\n                { id: 23, imgSrc: require('../img/cards/KB국민카드_체크_후불.webp'), altText: \"KB국민카드_체크_후불\", link: \"/card-detail/23\" }\n            ],\n        };\n    },\n    watch: {\n        startPoint(newStartPoint) {  // 수정된 부분\n            this.localStartPoint = newStartPoint;\n        },\n        endPoint(newEndPoint) {  // 수정된 부분\n            this.localEndPoint = newEndPoint;\n        }\n    },\n    methods: {\n        async geocode(address) {\n            try {\n                console.log('CardRecom.js >> Geocoding address:', address);\n                const response = await axiosInstance.get('/odsay/geocode/', { params: { address } });\n                console.log('CardRecom.js >> Geocode response:', response.data);\n                return response.data;\n            } catch (error) {\n                console.error('CardRecom.js >> Error geocoding address:', error);\n                if (error.response) {\n                    console.error('CardRecom.js >> Error response data:', error.response.data);\n                }\n                throw error;\n            }\n        },\n        \n        async findRoute() {\n            try {\n                console.log('CardRecom.js >> Finding route with start point:', this.localStartPoint, 'and end point:', this.localEndPoint);\n                \n                const startResponse = await this.geocode(this.localStartPoint);\n                console.log('CardRecom.js >> Start geocode response:', startResponse);\n                const endResponse = await this.geocode(this.localEndPoint);\n                console.log('CardRecom.js >> End geocode response:', endResponse);\n                \n                if (!startResponse || !endResponse) {\n                    throw new Error('Failed to get coordinates');\n                }\n\n                const sx = startResponse.x;\n                const sy = startResponse.y;\n                const ex = endResponse.x;\n                const ey = endResponse.y;\n                \n                console.log('CardRecom.js >> Start coordinates:', { sx, sy });\n                console.log('CardRecom.js >> End coordinates:', { ex, ey });\n                \n                const odsasApiUrl = `searchPubTransPathT?SX=${sx}&SY=${sy}&EX=${ex}&EY=${ey}&apiKey=${encodeURIComponent(process.env.VUE_APP_ODSAY_API_KEY)}`;\n                console.log('CardRecom.js >> ODSAY API request URL:', odsasApiUrl);\n                \n                const routeResponse = await this.$odsayAxios.get(odsasApiUrl);\n                console.log('CardRecom.js >> ODSAY API response:', routeResponse.data);\n\n                if (routeResponse.data && routeResponse.data.result && routeResponse.data.result.path) {\n                    this.routes = routeResponse.data.result.path.map((path) => {\n                        return {\n                            totalTime: path.info.totalTime,\n                            totalWalk: path.info.totalWalk,\n                            busTransitCount: path.info.busTransitCount,\n                            subwayTransitCount: path.info.subwayTransitCount,\n                            payment: path.info.payment,\n                            totalDistance: path.info.totalDistance,\n                            firstStartStation: path.subPath[0].startName,\n                            startNameKor: path.subPath[0].startName,\n                            endName: path.subPath[path.subPath.length - 1].endName,\n                            lastEndStation: path.subPath[path.subPath.length - 1].endName,\n                            subPaths: path.subPath,\n                            mapObj: path.info.mapObj,\n                            sx: sx,\n                            sy: sy,\n                            ex: ex,\n                            ey: ey\n                        };\n                    });\n                } else {\n                    console.error('CardRecom.js >> No valid route found');\n                }\n            } catch (error) {\n                console.error('CardRecom.js >> Error finding route:', error);\n            }\n        },\n\n        \n        getTrafficClass(subPath) {\n            if (subPath.trafficType === 1) {\n                return 'bus';\n            } else if (subPath.trafficType === 2) {\n                return `sub${subPath.lane[0].subwayCode}`;\n            } else {\n                return 'walk';\n            }\n        },\n        \n        formatTime(minutes) {\n            const hours = Math.floor(minutes / 60);\n            const mins = minutes % 60;\n            return `${hours}시간 ${mins}분`;\n        },\n        \n        getLineClass(trafficType, subwaycode) {\n            if (trafficType === 1) {\n                return 'bus';\n            } else if (trafficType === 2) {\n                return `sub${subwaycode}`;\n            } else {\n                return 'walk';\n            }\n        },\n        \n        getAction(subPath, startName, lane) {\n            if (subPath.trafficType === 1) {\n                return `지하철 ${lane.map(l => l.name).join(', ')} - ${startName}역`;\n            } else if (subPath.trafficType === 2) {\n                return `버스 ${lane.map(l => l.busNo).join(', ')} 번 - ${startName}`;\n            } else {\n                return `도보 - ${startName}`;\n            }\n        },\n\n    }\n\n\n};\n\nexport default CardRecomMixin;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}