{"ast":null,"code":"import MapView from '../assets/js/MapView';\nimport WebSocketClient from '../utils/WebSocketClient';\nexport default {\n  mixins: [MapView],\n  data() {\n    return {\n      localStartPoint: this.startPoint,\n      localEndPoint: this.endPoint,\n      routes: [],\n      map: null,\n      wsClient: null\n    };\n  },\n  methods: {\n    getTrafficClass(subPath, isBar = false) {\n      const prefix = isBar ? 'bar_' : '';\n      if (subPath.trafficType === 2) {\n        return `${prefix}bus${subPath.lane[0].type}`;\n      } else if (subPath.trafficType === 1) {\n        return `${prefix}sub${subPath.lane[0].subwayCode}`;\n      } else {\n        return `${prefix}line_walk`;\n      }\n    },\n    filteredSubPaths(subPaths) {\n      return subPaths.filter(subPath => subPath.trafficType !== 3);\n    },\n    async handleRouteClick(route) {\n      try {\n        const {\n          mapObj,\n          sx,\n          sy,\n          ex,\n          ey\n        } = route;\n        console.log('MapView.vue >> handleRouteClick >> mapObj:', mapObj);\n        console.log('MapView.vue >> handleRouteClick >> sx, sy, ex, ey:', sx, sy, ex, ey);\n        this.wsClient.send({\n          type: 'route',\n          mapObj,\n          sx,\n          sy,\n          ex,\n          ey\n        });\n      } catch (error) {\n        console.error('MapView.vue >> handleRouteClick >> Error:', error);\n      }\n    },\n    async displayRoute(mapObj, sx, sy, ex, ey) {\n      // Í∏∞Ï°¥ API Ìò∏Ï∂ú Î°úÏßÅÏùÑ ÏõπÏÜåÏºì Îç∞Ïù¥ÌÑ∞ Ï≤òÎ¶¨Î°ú Î≥ÄÍ≤Ω\n      this.wsClient.onMessage(response => {\n        this.displayRouteOnMap(response);\n      });\n      this.wsClient.send({\n        type: 'route',\n        mapObj,\n        sx,\n        sy,\n        ex,\n        ey\n      });\n    }\n  },\n  async mounted() {\n    this.initializeMap();\n    this.wsClient = new WebSocketClient('wss://3a145eca76f9.ngrok.app/ws/route/');\n    this.wsClient.connect();\n\n    // Î©îÏãúÏßÄ ÏàòÏã† Ìï∏Îì§Îü¨ ÏÑ§Ï†ï\n    this.wsClient.onMessage(data => {\n      this.displayRouteOnMap(data);\n    });\n  }\n};","map":{"version":3,"names":["MapView","WebSocketClient","mixins","data","localStartPoint","startPoint","localEndPoint","endPoint","routes","map","wsClient","methods","getTrafficClass","subPath","isBar","prefix","trafficType","lane","type","subwayCode","filteredSubPaths","subPaths","filter","handleRouteClick","route","mapObj","sx","sy","ex","ey","console","log","send","error","displayRoute","onMessage","response","displayRouteOnMap","mounted","initializeMap","connect"],"sources":["/Users/parkjiyoung/Desktop/computer/smart_injae/hackshim_project/saveus_proto/saveus/frontend/src/components/MapView.vue"],"sourcesContent":["<template>\n    <div class=\"map-view\">\n        <div id=\"controls\">\n            <div class=\"control-item\">\n                <label for=\"startAddress\">Ï∂úÎ∞úÏßÄ</label>\n                <input type=\"text\" id=\"startAddress\" v-model=\"localStartPoint\">\n            </div>\n            <div class=\"control-item\">\n                <label for=\"endAddress\">ÎèÑÏ∞©ÏßÄ</label>\n                <input type=\"text\" id=\"endAddress\" v-model=\"localEndPoint\">\n            </div>\n            <button @click=\"findRoute\">Í∏∏Ï∞æÍ∏∞</button>\n        </div>\n        <div id=\"results\">\n            <h3>  üß≠ Í≤ΩÎ°úÎ•º ÏÑ†ÌÉùÌïòÏÑ∏Ïöî! üß≠  </h3>\n\n            <div class=\"route-list-box\">\n                <ul class=\"route-list\">\n                    <li v-for=\"(route, index) in routes\" :key=\"index\" class=\"route-data\">\n                        <div class=\"route_con\" @click=\"handleRouteClick(route)\">\n                            <div class=\"route_time_header\"> [Ï¥ù ÏÜåÏöî ÏãúÍ∞Ñ] {{ formatTime(route.totalTime) }}</div>\n                            <div class=\"route_time\">\n                                <span class=\"info_sub\">\n                                    <span>ÌôòÏäπ {{ route.subwayTransitCount + route.busTransitCount - 1 }}Ìöå | </span>\n                                    <span>{{ route.payment }}Ïõê | </span>\n                                    <span>{{ (route.totalDistance / 1000).toFixed(1) }}km</span>\n                                </span>\n                            </div>\n                            <div class=\"route_bar\">\n                                <span \n                                    v-for=\"(subPath, subIndex) in route.subPaths\" \n                                    :key=\"subIndex\"\n                                    :class=\"['bar_area', getTrafficClass(subPath, true)]\"\n                                    :style=\"{ flexBasis: `${subPath.sectionTime * 100}%`, minWidth: '6.5%' }\"\n                                >\n                                    <!-- <span class=\"icon\"></span> -->\n                                    <span class=\"bar\">\n                                        <span class=\"time\">{{ subPath.sectionTime }}Î∂Ñ</span>\n                                    </span>\n                                </span>\n                            </div>\n                            <!--  -->\n                            <div class=\"route_detail\">\n                                <ul class=\"route-detail-list\">\n                                    <li v-for=\"(subPath, subIndex) in filteredSubPaths(route.subPaths)\" :key=\"subIndex\" class=\"line\">\n                                        <span class=\"icon\" :class=\"getTrafficClass(subPath)\"></span>\n                                        <span class=\"r_body\">\n                                            <span class=\"r_action\">{{ getAction(subPath, subPath.startName, subPath.lane) }}</span>\n                                        </span>\n                                    </li>\n                                    <li :key=\"route.subPaths.length\" class=\"line\">\n                                        <span class=\"icon\"></span>\n                                        <span class=\"r_body\">\n                                            <span class=\"r_title\">‚û™ {{ route.lastEndStation }} ÌïòÏ∞®</span>\n                                        </span>\n                                    </li>\n                                </ul>\n                            <div class=\"maker\" style=\"display: none;\">powered by<em>www.ODsay.com</em></div>\n                        </div>\n                    </div>\n                </li>\n            </ul>\n            </div>\n        </div>\n        <div id=\"map\"></div>\n    </div>\n</template>\n\n<script>\nimport MapView from '../assets/js/MapView';\nimport WebSocketClient from '../utils/WebSocketClient';\n\nexport default {\n    mixins: [MapView],\n    data() {\n        return {\n            localStartPoint: this.startPoint,\n            localEndPoint: this.endPoint,\n            routes: [],\n            map: null,\n            wsClient: null,\n        };\n    },\n    methods: {\n        getTrafficClass(subPath, isBar = false) {\n            const prefix = isBar ? 'bar_' : '';\n            if (subPath.trafficType === 2) {\n                return `${prefix}bus${subPath.lane[0].type}`;\n            } else if (subPath.trafficType === 1) {\n                return `${prefix}sub${subPath.lane[0].subwayCode}`;\n            } else {\n                return `${prefix}line_walk`;\n            }\n        },\n        filteredSubPaths(subPaths) {\n            return subPaths.filter(subPath => subPath.trafficType !== 3);\n        },\n        async handleRouteClick(route) {\n            try {\n                const { mapObj, sx, sy, ex, ey } = route;\n                console.log('MapView.vue >> handleRouteClick >> mapObj:', mapObj);\n                console.log('MapView.vue >> handleRouteClick >> sx, sy, ex, ey:', sx, sy, ex, ey);\n\n                this.wsClient.send({\n                    type: 'route',\n                    mapObj,\n                    sx,\n                    sy,\n                    ex,\n                    ey\n                });\n            } catch (error) {\n                console.error('MapView.vue >> handleRouteClick >> Error:', error);\n            }\n        },\n        async displayRoute(mapObj, sx, sy, ex, ey) {\n            // Í∏∞Ï°¥ API Ìò∏Ï∂ú Î°úÏßÅÏùÑ ÏõπÏÜåÏºì Îç∞Ïù¥ÌÑ∞ Ï≤òÎ¶¨Î°ú Î≥ÄÍ≤Ω\n            this.wsClient.onMessage((response) => {\n                this.displayRouteOnMap(response);\n            });\n\n            this.wsClient.send({\n                type: 'route',\n                mapObj,\n                sx,\n                sy,\n                ex,\n                ey\n            });\n        }\n    },\n    async mounted() {\n        this.initializeMap();\n        this.wsClient = new WebSocketClient('wss://3a145eca76f9.ngrok.app/ws/route/');\n        this.wsClient.connect();\n\n        // Î©îÏãúÏßÄ ÏàòÏã† Ìï∏Îì§Îü¨ ÏÑ§Ï†ï\n        this.wsClient.onMessage((data) => {\n            this.displayRouteOnMap(data);\n        });\n    },\n};\n</script>\n\n<style scoped>\n@import '../assets/css/MapView.css';\n\n\n</style>\n"],"mappings":"AAqEA,OAAOA,OAAM,MAAO,sBAAsB;AAC1C,OAAOC,eAAc,MAAO,0BAA0B;AAEtD,eAAe;EACXC,MAAM,EAAE,CAACF,OAAO,CAAC;EACjBG,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,eAAe,EAAE,IAAI,CAACC,UAAU;MAChCC,aAAa,EAAE,IAAI,CAACC,QAAQ;MAC5BC,MAAM,EAAE,EAAE;MACVC,GAAG,EAAE,IAAI;MACTC,QAAQ,EAAE;IACd,CAAC;EACL,CAAC;EACDC,OAAO,EAAE;IACLC,eAAeA,CAACC,OAAO,EAAEC,KAAI,GAAI,KAAK,EAAE;MACpC,MAAMC,MAAK,GAAID,KAAI,GAAI,MAAK,GAAI,EAAE;MAClC,IAAID,OAAO,CAACG,WAAU,KAAM,CAAC,EAAE;QAC3B,OAAO,GAAGD,MAAM,MAAMF,OAAO,CAACI,IAAI,CAAC,CAAC,CAAC,CAACC,IAAI,EAAE;MAChD,OAAO,IAAIL,OAAO,CAACG,WAAU,KAAM,CAAC,EAAE;QAClC,OAAO,GAAGD,MAAM,MAAMF,OAAO,CAACI,IAAI,CAAC,CAAC,CAAC,CAACE,UAAU,EAAE;MACtD,OAAO;QACH,OAAO,GAAGJ,MAAM,WAAW;MAC/B;IACJ,CAAC;IACDK,gBAAgBA,CAACC,QAAQ,EAAE;MACvB,OAAOA,QAAQ,CAACC,MAAM,CAACT,OAAM,IAAKA,OAAO,CAACG,WAAU,KAAM,CAAC,CAAC;IAChE,CAAC;IACD,MAAMO,gBAAgBA,CAACC,KAAK,EAAE;MAC1B,IAAI;QACA,MAAM;UAAEC,MAAM;UAAEC,EAAE;UAAEC,EAAE;UAAEC,EAAE;UAAEC;QAAG,IAAIL,KAAK;QACxCM,OAAO,CAACC,GAAG,CAAC,4CAA4C,EAAEN,MAAM,CAAC;QACjEK,OAAO,CAACC,GAAG,CAAC,oDAAoD,EAAEL,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,CAAC;QAEjF,IAAI,CAACnB,QAAQ,CAACsB,IAAI,CAAC;UACfd,IAAI,EAAE,OAAO;UACbO,MAAM;UACNC,EAAE;UACFC,EAAE;UACFC,EAAE;UACFC;QACJ,CAAC,CAAC;MACN,EAAE,OAAOI,KAAK,EAAE;QACZH,OAAO,CAACG,KAAK,CAAC,2CAA2C,EAAEA,KAAK,CAAC;MACrE;IACJ,CAAC;IACD,MAAMC,YAAYA,CAACT,MAAM,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAE;MACvC;MACA,IAAI,CAACnB,QAAQ,CAACyB,SAAS,CAAEC,QAAQ,IAAK;QAClC,IAAI,CAACC,iBAAiB,CAACD,QAAQ,CAAC;MACpC,CAAC,CAAC;MAEF,IAAI,CAAC1B,QAAQ,CAACsB,IAAI,CAAC;QACfd,IAAI,EAAE,OAAO;QACbO,MAAM;QACNC,EAAE;QACFC,EAAE;QACFC,EAAE;QACFC;MACJ,CAAC,CAAC;IACN;EACJ,CAAC;EACD,MAAMS,OAAOA,CAAA,EAAG;IACZ,IAAI,CAACC,aAAa,CAAC,CAAC;IACpB,IAAI,CAAC7B,QAAO,GAAI,IAAIT,eAAe,CAAC,wCAAwC,CAAC;IAC7E,IAAI,CAACS,QAAQ,CAAC8B,OAAO,CAAC,CAAC;;IAEvB;IACA,IAAI,CAAC9B,QAAQ,CAACyB,SAAS,CAAEhC,IAAI,IAAK;MAC9B,IAAI,CAACkC,iBAAiB,CAAClC,IAAI,CAAC;IAChC,CAAC,CAAC;EACN;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}