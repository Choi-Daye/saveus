{"ast":null,"code":"import Chart from 'chart.js/auto';\nimport axios from 'axios';\nimport { EventBus } from '../../../eventBus.js'; // 이벤트 버스 불러오기\n\nconst getCsrfToken = async () => {\n  try {\n    const response = await axios.get('https://d5bf569728f0.ngrok.app/odsay/set-csrf-token/', {\n      withCredentials: true\n    });\n    console.log('MapView.js >> CSRF token received:', response.data);\n    return response.data.csrfToken;\n  } catch (error) {\n    console.error('MapView.js >> Error fetching CSRF token:', error);\n    throw error;\n  }\n};\nconst axiosInstance = axios.create({\n  baseURL: 'https://d5bf569728f0.ngrok.app',\n  withCredentials: true\n});\naxiosInstance.interceptors.request.use(async config => {\n  try {\n    const token = await getCsrfToken();\n    config.headers['X-CSRFToken'] = token;\n    console.log('MapView.js >> CSRF token set in request headers:', token);\n    return config;\n  } catch (error) {\n    console.error('MapView.js >> Failed to set CSRF token in request headers:', error);\n    return Promise.reject(error);\n  }\n});\nexport default {\n  props: {\n    memHome: String,\n    startPoint: String,\n    // 수정된 부분\n    endPoint: String,\n    // 수정된 부분\n    memYoungY: Boolean,\n    memYoungN: Boolean,\n    memSubsidiaryYn: Boolean\n  },\n  data() {\n    return {\n      localStartPoint: this.startPoint,\n      // 수정된 부분\n      localEndPoint: this.endPoint,\n      // 수정된 부분\n      routes: [],\n      wsClient: null,\n      barChart: null,\n      // barChart 변수 추가\n      cards: [{\n        id: 1,\n        imgSrc: require('../img/cards/광주은행_신용_후불.jpg'),\n        imgWidth: \"200px\",\n        altText: \"광주은행_신용_후불\",\n        link: \"/card-detail/1\"\n      }, {\n        id: 2,\n        imgSrc: require('../img/cards/기업은행_신용_후불.webp'),\n        altText: \"기업은행_신용_후불\",\n        link: \"/card-detail/2\"\n      }, {\n        id: 3,\n        imgSrc: require('../img/cards/기업은행_체크_후불.webp'),\n        altText: \"기업은행_체크_후불\",\n        link: \"/card-detail/3\"\n      }, {\n        id: 4,\n        imgSrc: require('../img/cards/기후동행카드.webp'),\n        imgWidth: \"300px\",\n        imgHeight: \"300px\",\n        altText: \"기후동행카드\",\n        link: \"/card-detail/4\"\n      }, {\n        id: 5,\n        imgSrc: require('../img/cards/농협_체크_후불.webp'),\n        altText: \"농협_체크_후불\",\n        link: \"/card-detail/5\"\n      }, {\n        id: 6,\n        imgSrc: require('../img/cards/농협카드_신용_후불.webp'),\n        altText: \"농협카드_신용_후불\",\n        link: \"/card-detail/6\"\n      }, {\n        id: 7,\n        imgSrc: require('../img/cards/바로카드_신용_후불.png'),\n        imgWidth: \"200px\",\n        altText: \"바로카드_신용_후불\",\n        link: \"/card-detail/7\"\n      }, {\n        id: 8,\n        imgSrc: require('../img/cards/삼성카드_신용_후불.gif'),\n        altText: \"삼성카드_신용_후불\",\n        link: \"/card-detail/8\"\n      }, {\n        id: 9,\n        imgSrc: require('../img/cards/신한_신용_후불.webp'),\n        altText: \"신한_신용_후불\",\n        link: \"/card-detail/9\"\n      }, {\n        id: 10,\n        imgSrc: require('../img/cards/신한카드_신용_후불_모바일.webp'),\n        altText: \"신한카드_신용_후불_모바일\",\n        link: \"/card-detail/10\"\n      }, {\n        id: 11,\n        imgSrc: require('../img/cards/신한카드_체크_후불.webp'),\n        altText: \"신한카드_체크_후불\",\n        link: \"/card-detail/11\"\n      }, {\n        id: 12,\n        imgSrc: require('../img/cards/우리카드_신용_후불.webp'),\n        altText: \"우리카드_신용_후불\",\n        link: \"/card-detail/12\"\n      }, {\n        id: 13,\n        imgSrc: require('../img/cards/우리카드_체크_후불.webp'),\n        altText: \"우리카드_체크_후불\",\n        link: \"/card-detail/13\"\n      }, {\n        id: 14,\n        imgSrc: require('../img/cards/이동의즐거움_선불_모바일.png'),\n        imgWidth: \"200px\",\n        altText: \"이동의즐거움_선불_모바일\",\n        link: \"/card-detail/14\"\n      }, {\n        id: 15,\n        imgSrc: require('../img/cards/이동의즐거움_선불.gif'),\n        altText: \"이동의즐거움_선불\",\n        link: \"/card-detail/15\"\n      }, {\n        id: 16,\n        imgSrc: require('../img/cards/카카오페이_선불_모바일.webp'),\n        imgWidth: \"200px\",\n        altText: \"카카오페이_선불_모바일\",\n        link: \"/card-detail/16\"\n      }, {\n        id: 17,\n        imgSrc: require('../img/cards/케이뱅크_체크_후불.webp'),\n        altText: \"케이뱅크_체크_후불\",\n        link: \"/card-detail/17\"\n      }, {\n        id: 18,\n        imgSrc: require('../img/cards/하나_신용_후불.webp'),\n        altText: \"하나_신용_후불\",\n        link: \"/card-detail/18\"\n      }, {\n        id: 19,\n        imgSrc: require('../img/cards/하나카드_체크_후불.webp'),\n        altText: \"하나카드_체크_후불\",\n        link: \"/card-detail/19\"\n      }, {\n        id: 20,\n        imgSrc: require('../img/cards/DGB유페이_선불_모바일.webp'),\n        altText: \"DGB유페이_선불_모바일\",\n        link: \"/card-detail/20\"\n      }, {\n        id: 21,\n        imgSrc: require('../img/cards/DGB유페이_선불_실물.webp'),\n        altText: \"DGB유페이_선불_실물\",\n        link: \"/card-detail/21\"\n      }, {\n        id: 22,\n        imgSrc: require('../img/cards/KB국민카드_신용_후불.webp'),\n        altText: \"KB국민카드_신용_후불\",\n        link: \"/card-detail/22\"\n      }, {\n        id: 23,\n        imgSrc: require('../img/cards/KB국민카드_체크_후불.webp'),\n        altText: \"KB국민카드_체크_후불\",\n        link: \"/card-detail/23\"\n      }]\n    };\n  },\n  watch: {\n    startPoint(newStartPoint) {\n      // 수정된 부분\n      this.localStartPoint = newStartPoint;\n    },\n    endPoint(newEndPoint) {\n      // 수정된 부분\n      this.localEndPoint = newEndPoint;\n    }\n  },\n  methods: {\n    async geocode(address) {\n      try {\n        console.log('MapView.js >> Geocoding address:', address);\n        const response = await axiosInstance.get('/odsay/geocode/', {\n          params: {\n            address\n          }\n        });\n        console.log('MapView.js >> Geocode response:', response.data);\n        return response.data;\n      } catch (error) {\n        console.error('MapView.js >> Error geocoding address:', error);\n        if (error.response) {\n          console.error('MapView.js >> Error response data:', error.response.data);\n        }\n        throw error;\n      }\n    },\n    async findRoute() {\n      try {\n        console.log('MapView.js >> Finding route with start point:', this.localStartPoint, 'and end point:', this.localEndPoint);\n        const startResponse = await this.geocode(this.localStartPoint);\n        console.log('MapView.js >> Start geocode response:', startResponse);\n        const endResponse = await this.geocode(this.localEndPoint);\n        console.log('MapView.js >> End geocode response:', endResponse);\n        if (!startResponse || !endResponse) {\n          throw new Error('Failed to get coordinates');\n        }\n        const sx = startResponse.x;\n        const sy = startResponse.y;\n        const ex = endResponse.x;\n        const ey = endResponse.y;\n        console.log('MapView.js >> Start coordinates:', {\n          sx,\n          sy\n        });\n        console.log('MapView.js >> End coordinates:', {\n          ex,\n          ey\n        });\n        const odsasApiUrl = `searchPubTransPathT?SX=${sx}&SY=${sy}&EX=${ex}&EY=${ey}&apiKey=${encodeURIComponent(process.env.VUE_APP_ODSAY_API_KEY)}`;\n        console.log('MapView.js >> ODSAY API request URL:', odsasApiUrl);\n        const routeResponse = await this.$odsayAxios.get(odsasApiUrl);\n        console.log('MapView.js >> ODSAY API response:', routeResponse.data);\n        if (routeResponse.data && routeResponse.data.result && routeResponse.data.result.path) {\n          this.routes = routeResponse.data.result.path.map(path => {\n            return {\n              totalTime: path.info.totalTime,\n              totalWalk: path.info.totalWalk,\n              busTransitCount: path.info.busTransitCount,\n              subwayTransitCount: path.info.subwayTransitCount,\n              payment: path.info.payment,\n              totalDistance: path.info.totalDistance,\n              firstStartStation: path.subPath[0].startName,\n              startNameKor: path.subPath[0].startName,\n              endName: path.subPath[path.subPath.length - 1].endName,\n              lastEndStation: path.subPath[path.subPath.length - 1].endName,\n              subPaths: path.subPath,\n              mapObj: path.info.mapObj,\n              sx: sx,\n              sy: sy,\n              ex: ex,\n              ey: ey\n            };\n          });\n        } else {\n          console.error('MapView.js >> No valid route found');\n        }\n      } catch (error) {\n        console.error('MapView.js >> Error finding route:', error);\n      }\n    },\n    getTrafficClass(subPath) {\n      // 추가된 부분\n      if (subPath.trafficType === 1) {\n        return 'bus';\n      } else if (subPath.trafficType === 2) {\n        return `sub${subPath.lane[0].subwayCode}`;\n      } else {\n        return 'walk';\n      }\n    },\n    formatTime(minutes) {\n      const hours = Math.floor(minutes / 60);\n      const mins = minutes % 60;\n      return `${hours}시간 ${mins}분`;\n    },\n    getLineClass(trafficType, subwaycode) {\n      if (trafficType === 1) {\n        return 'bus';\n      } else if (trafficType === 2) {\n        return `sub${subwaycode}`;\n      } else {\n        return 'walk';\n      }\n    },\n    getAction(subPath, startName, lane) {\n      if (subPath.trafficType === 1) {\n        return `지하철 ${lane.map(l => l.name).join(', ')} - ${startName}역`;\n      } else if (subPath.trafficType === 2) {\n        return `버스 ${lane.map(l => l.busNo).join(', ')} 번 - ${startName}`;\n      } else {\n        return `도보 - ${startName}`;\n      }\n    },\n    initializeChart() {\n      const ctx = document.getElementById('barChart').getContext('2d');\n\n      // 초기화된 카드 데이터 배열 (모두 0으로 설정)\n      const cardData = [600, 230, 120, 310, 450, 280, 350, 420, 270, 300, 380, 450, 200, 210, 340, 290, 330, 310, 390, 420, 250, 270, 300];\n\n      // 카드 이름 레이블\n      const cardLabels = ['original', 'gidongca', 'bc_credit', 'shinhan_credit_tmoney', 'sinhan_credit', 'sinhan_check', 'hana_check', 'hana_credit', 'handai_credit', 'nonghyup_check', 'kakao_', 'ezl_', 'samsung_credit', 'kbank_check', 'dgbupay_', 'ibk_credit', 'ibk_check', 'nonghyup_check', 'kb_credit', 'kb_check', 'woori_credit', 'woori_check', 'kjbank_credit'];\n      this.barChart = new Chart(ctx, {\n        type: 'bar',\n        data: {\n          labels: cardLabels,\n          // 카드 번호 레이블 설정\n          datasets: [{\n            label: 'Total Transportation Cost',\n            data: cardData,\n            // 카드 데이터 설정\n            backgroundColor: 'rgba(75, 192, 192, 0.2)',\n            borderColor: 'rgba(75, 192, 192, 1)',\n            borderWidth: 1\n          }]\n        },\n        options: {\n          maintainAspectRatio: false,\n          // 추가된 부분: 부모 요소에 맞추기 위해 비율 유지 해제\n          scales: {\n            y: {\n              beginAtZero: true\n            }\n          },\n          responsive: true,\n          plugins: {\n            legend: {\n              position: 'top'\n            },\n            title: {\n              display: true,\n              text: 'Total Transportation Cost per Card'\n            }\n          }\n        }\n      });\n    }\n  },\n  async mounted() {\n    this.initializeChart(); // 초기화 차트 함수 호출\n    // 이벤트 수신\n    EventBus.on('route-found', routes => {\n      console.log('CardRecom.js >> route-found event received with routes:', routes);\n      this.routes = routes;\n    });\n    await this.findRoute();\n  }\n};","map":{"version":3,"names":["Chart","axios","EventBus","getCsrfToken","response","get","withCredentials","console","log","data","csrfToken","error","axiosInstance","create","baseURL","interceptors","request","use","config","token","headers","Promise","reject","props","memHome","String","startPoint","endPoint","memYoungY","Boolean","memYoungN","memSubsidiaryYn","localStartPoint","localEndPoint","routes","wsClient","barChart","cards","id","imgSrc","require","imgWidth","altText","link","imgHeight","watch","newStartPoint","newEndPoint","methods","geocode","address","params","findRoute","startResponse","endResponse","Error","sx","x","sy","y","ex","ey","odsasApiUrl","encodeURIComponent","process","env","VUE_APP_ODSAY_API_KEY","routeResponse","$odsayAxios","result","path","map","totalTime","info","totalWalk","busTransitCount","subwayTransitCount","payment","totalDistance","firstStartStation","subPath","startName","startNameKor","endName","length","lastEndStation","subPaths","mapObj","getTrafficClass","trafficType","lane","subwayCode","formatTime","minutes","hours","Math","floor","mins","getLineClass","subwaycode","getAction","l","name","join","busNo","initializeChart","ctx","document","getElementById","getContext","cardData","cardLabels","type","labels","datasets","label","backgroundColor","borderColor","borderWidth","options","maintainAspectRatio","scales","beginAtZero","responsive","plugins","legend","position","title","display","text","mounted","on"],"sources":["/Users/parkjiyoung/Desktop/computer/smart_injae/hackshim_project/saveus_proto/saveus/frontend/src/assets/js/CardRecom.js"],"sourcesContent":["import Chart from 'chart.js/auto';\nimport axios from 'axios';\nimport { EventBus } from '../../../eventBus.js';  // 이벤트 버스 불러오기\n\n\nconst getCsrfToken = async () => {\n    try {\n        const response = await axios.get('https://d5bf569728f0.ngrok.app/odsay/set-csrf-token/', { withCredentials: true });\n        console.log('MapView.js >> CSRF token received:', response.data);\n        return response.data.csrfToken;\n    } catch (error) {\n        console.error('MapView.js >> Error fetching CSRF token:', error);\n        throw error;\n    }\n};\n\nconst axiosInstance = axios.create({\n    baseURL: 'https://d5bf569728f0.ngrok.app',\n    withCredentials: true\n});\n\naxiosInstance.interceptors.request.use(async (config) => {\n    try {\n        const token = await getCsrfToken();\n        config.headers['X-CSRFToken'] = token;\n        console.log('MapView.js >> CSRF token set in request headers:', token);\n        return config;\n    } catch (error) {\n        console.error('MapView.js >> Failed to set CSRF token in request headers:', error);\n        return Promise.reject(error);\n    }\n});\n\nexport default {\n    props: {\n        memHome: String,\n        startPoint: String,  // 수정된 부분\n        endPoint: String,    // 수정된 부분\n        memYoungY: Boolean,\n        memYoungN: Boolean,\n        memSubsidiaryYn: Boolean\n    },\n    data() {\n        return {\n            localStartPoint: this.startPoint,  // 수정된 부분\n            localEndPoint: this.endPoint,      // 수정된 부분\n            routes: [],\n            wsClient: null,\n            barChart: null,  // barChart 변수 추가\n            cards: [\n                { id: 1, imgSrc: require('../img/cards/광주은행_신용_후불.jpg'), imgWidth: \"200px\", altText: \"광주은행_신용_후불\", link: \"/card-detail/1\" },\n                { id: 2, imgSrc: require('../img/cards/기업은행_신용_후불.webp'), altText: \"기업은행_신용_후불\", link: \"/card-detail/2\" },\n                { id: 3, imgSrc: require('../img/cards/기업은행_체크_후불.webp'), altText: \"기업은행_체크_후불\", link: \"/card-detail/3\" },\n                { id: 4, imgSrc: require('../img/cards/기후동행카드.webp'), imgWidth: \"300px\", imgHeight: \"300px\", altText: \"기후동행카드\", link: \"/card-detail/4\" },\n                { id: 5, imgSrc: require('../img/cards/농협_체크_후불.webp'), altText: \"농협_체크_후불\", link: \"/card-detail/5\" },\n                { id: 6, imgSrc: require('../img/cards/농협카드_신용_후불.webp'), altText: \"농협카드_신용_후불\", link: \"/card-detail/6\" },\n                { id: 7, imgSrc: require('../img/cards/바로카드_신용_후불.png'), imgWidth: \"200px\", altText: \"바로카드_신용_후불\", link: \"/card-detail/7\" },\n                { id: 8, imgSrc: require('../img/cards/삼성카드_신용_후불.gif'), altText: \"삼성카드_신용_후불\", link: \"/card-detail/8\" },\n                { id: 9, imgSrc: require('../img/cards/신한_신용_후불.webp'), altText: \"신한_신용_후불\", link: \"/card-detail/9\" },\n                { id: 10, imgSrc: require('../img/cards/신한카드_신용_후불_모바일.webp'), altText: \"신한카드_신용_후불_모바일\", link: \"/card-detail/10\" },\n                { id: 11, imgSrc: require('../img/cards/신한카드_체크_후불.webp'), altText: \"신한카드_체크_후불\", link: \"/card-detail/11\" },\n                { id: 12, imgSrc: require('../img/cards/우리카드_신용_후불.webp'), altText: \"우리카드_신용_후불\", link: \"/card-detail/12\" },\n                { id: 13, imgSrc: require('../img/cards/우리카드_체크_후불.webp'), altText: \"우리카드_체크_후불\", link: \"/card-detail/13\" },\n                { id: 14, imgSrc: require('../img/cards/이동의즐거움_선불_모바일.png'), imgWidth: \"200px\", altText: \"이동의즐거움_선불_모바일\", link: \"/card-detail/14\" },\n                { id: 15, imgSrc: require('../img/cards/이동의즐거움_선불.gif'), altText: \"이동의즐거움_선불\", link: \"/card-detail/15\" },\n                { id: 16, imgSrc: require('../img/cards/카카오페이_선불_모바일.webp'), imgWidth: \"200px\", altText: \"카카오페이_선불_모바일\", link: \"/card-detail/16\" },\n                { id: 17, imgSrc: require('../img/cards/케이뱅크_체크_후불.webp'), altText: \"케이뱅크_체크_후불\", link: \"/card-detail/17\" },\n                { id: 18, imgSrc: require('../img/cards/하나_신용_후불.webp'), altText: \"하나_신용_후불\", link: \"/card-detail/18\" },\n                { id: 19, imgSrc: require('../img/cards/하나카드_체크_후불.webp'), altText: \"하나카드_체크_후불\", link: \"/card-detail/19\" },\n                { id: 20, imgSrc: require('../img/cards/DGB유페이_선불_모바일.webp'), altText: \"DGB유페이_선불_모바일\", link: \"/card-detail/20\" },\n                { id: 21, imgSrc: require('../img/cards/DGB유페이_선불_실물.webp'), altText: \"DGB유페이_선불_실물\", link: \"/card-detail/21\" },\n                { id: 22, imgSrc: require('../img/cards/KB국민카드_신용_후불.webp'), altText: \"KB국민카드_신용_후불\", link: \"/card-detail/22\" },\n                { id: 23, imgSrc: require('../img/cards/KB국민카드_체크_후불.webp'), altText: \"KB국민카드_체크_후불\", link: \"/card-detail/23\" }\n            ],\n        };\n    },\n    watch: {\n        startPoint(newStartPoint) {  // 수정된 부분\n            this.localStartPoint = newStartPoint;\n        },\n        endPoint(newEndPoint) {  // 수정된 부분\n            this.localEndPoint = newEndPoint;\n        }\n    },\n    methods: {\n        async geocode(address) {\n            try {\n                console.log('MapView.js >> Geocoding address:', address);\n                const response = await axiosInstance.get('/odsay/geocode/', { params: { address } });\n                console.log('MapView.js >> Geocode response:', response.data);\n                return response.data;\n            } catch (error) {\n                console.error('MapView.js >> Error geocoding address:', error);\n                if (error.response) {\n                    console.error('MapView.js >> Error response data:', error.response.data);\n                }\n                throw error;\n            }\n        },\n        \n        async findRoute() {\n            try {\n                console.log('MapView.js >> Finding route with start point:', this.localStartPoint, 'and end point:', this.localEndPoint);\n                \n                const startResponse = await this.geocode(this.localStartPoint);\n                console.log('MapView.js >> Start geocode response:', startResponse);\n                const endResponse = await this.geocode(this.localEndPoint);\n                console.log('MapView.js >> End geocode response:', endResponse);\n                \n                if (!startResponse || !endResponse) {\n                    throw new Error('Failed to get coordinates');\n                }\n\n                const sx = startResponse.x;\n                const sy = startResponse.y;\n                const ex = endResponse.x;\n                const ey = endResponse.y;\n                \n                console.log('MapView.js >> Start coordinates:', { sx, sy });\n                console.log('MapView.js >> End coordinates:', { ex, ey });\n                \n                const odsasApiUrl = `searchPubTransPathT?SX=${sx}&SY=${sy}&EX=${ex}&EY=${ey}&apiKey=${encodeURIComponent(process.env.VUE_APP_ODSAY_API_KEY)}`;\n                console.log('MapView.js >> ODSAY API request URL:', odsasApiUrl);\n                \n                const routeResponse = await this.$odsayAxios.get(odsasApiUrl);\n                console.log('MapView.js >> ODSAY API response:', routeResponse.data);\n\n                if (routeResponse.data && routeResponse.data.result && routeResponse.data.result.path) {\n                    this.routes = routeResponse.data.result.path.map((path) => {\n                        return {\n                            totalTime: path.info.totalTime,\n                            totalWalk: path.info.totalWalk,\n                            busTransitCount: path.info.busTransitCount,\n                            subwayTransitCount: path.info.subwayTransitCount,\n                            payment: path.info.payment,\n                            totalDistance: path.info.totalDistance,\n                            firstStartStation: path.subPath[0].startName,\n                            startNameKor: path.subPath[0].startName,\n                            endName: path.subPath[path.subPath.length - 1].endName,\n                            lastEndStation: path.subPath[path.subPath.length - 1].endName,\n                            subPaths: path.subPath,\n                            mapObj: path.info.mapObj,\n                            sx: sx,\n                            sy: sy,\n                            ex: ex,\n                            ey: ey\n                        };\n                    });\n                } else {\n                    console.error('MapView.js >> No valid route found');\n                }\n            } catch (error) {\n                console.error('MapView.js >> Error finding route:', error);\n            }\n        },\n\n        getTrafficClass(subPath) {  // 추가된 부분\n            if (subPath.trafficType === 1) {\n                return 'bus';\n            } else if (subPath.trafficType === 2) {\n                return `sub${subPath.lane[0].subwayCode}`;\n            } else {\n                return 'walk';\n            }\n        },\n\n        formatTime(minutes) {\n            const hours = Math.floor(minutes / 60);\n            const mins = minutes % 60;\n            return `${hours}시간 ${mins}분`;\n        },\n\n        getLineClass(trafficType, subwaycode) {\n            if (trafficType === 1) {\n                return 'bus';\n            } else if (trafficType === 2) {\n                return `sub${subwaycode}`;\n            } else {\n                return 'walk';\n            }\n        },\n\n        getAction(subPath, startName, lane) {\n            if (subPath.trafficType === 1) {\n                return `지하철 ${lane.map(l => l.name).join(', ')} - ${startName}역`;\n            } else if (subPath.trafficType === 2) {\n                return `버스 ${lane.map(l => l.busNo).join(', ')} 번 - ${startName}`;\n            } else {\n                return `도보 - ${startName}`;\n            }\n        },\n\n        initializeChart() {\n            const ctx = document.getElementById('barChart').getContext('2d');\n        \n            // 초기화된 카드 데이터 배열 (모두 0으로 설정)\n            const cardData = [\n                600, 230, 120, 310, 450, 280, 350, 420, 270, 300, 380, 450, 200, 210, 340, 290, 330, 310, 390, 420, 250, 270, 300\n            ];\n\n            // 카드 이름 레이블\n            const cardLabels = [\n                'original', 'gidongca', 'bc_credit', 'shinhan_credit_tmoney', 'sinhan_credit', 'sinhan_check',\n                'hana_check', 'hana_credit', 'handai_credit', 'nonghyup_check', 'kakao_', 'ezl_', 'samsung_credit',\n                'kbank_check', 'dgbupay_', 'ibk_credit', 'ibk_check', 'nonghyup_check', 'kb_credit', 'kb_check',\n                'woori_credit', 'woori_check', 'kjbank_credit'\n            ];\n        \n            this.barChart = new Chart(ctx, {\n                type: 'bar',\n                data: {\n                    labels: cardLabels,  // 카드 번호 레이블 설정\n                    datasets: [{\n                        label: 'Total Transportation Cost',\n                        data: cardData,  // 카드 데이터 설정\n                        backgroundColor: 'rgba(75, 192, 192, 0.2)',\n                        borderColor: 'rgba(75, 192, 192, 1)',\n                        borderWidth: 1\n                    }]\n                },\n                options: {\n                    maintainAspectRatio: false, // 추가된 부분: 부모 요소에 맞추기 위해 비율 유지 해제\n                    scales: {\n                        y: {\n                            beginAtZero: true\n                        }\n                    },\n                    responsive: true,\n                    plugins: {\n                        legend: {\n                            position: 'top',\n                        },\n                        title: {\n                            display: true,\n                            text: 'Total Transportation Cost per Card'\n                        }\n                    }\n                }\n            });\n        }\n    },\n\n    async mounted() {\n        this.initializeChart();  // 초기화 차트 함수 호출\n        // 이벤트 수신\n        EventBus.on('route-found', (routes) => {\n            console.log('CardRecom.js >> route-found event received with routes:', routes);\n            this.routes = routes;\n        });\n        await this.findRoute();\n    },\n\n\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}