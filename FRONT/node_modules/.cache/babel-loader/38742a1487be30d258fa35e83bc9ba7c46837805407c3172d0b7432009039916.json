{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: 'ChatBot',\n  data() {\n    return {\n      messages: [],\n      userInput: ''\n    };\n  },\n  methods: {\n    sendMessage() {\n      if (this.userInput.trim() !== '') {\n        this.messages.push({\n          sender: 'user',\n          text: this.userInput\n        });\n        const userMessage = this.userInput;\n        this.userInput = '';\n        this.getBotResponse(userMessage);\n      }\n    },\n    getBotResponse(message) {\n      // 봇 응답을 시뮬레이션\n      setTimeout(() => {\n        let botResponse = '';\n        if (message.toLowerCase().includes('안녕하세요')) {\n          botResponse = '안녕하세요! 무엇을 도와드릴까요?';\n        } else if (message.toLowerCase().includes('도움')) {\n          botResponse = '물론이죠, 무엇을 도와드릴까요?';\n        } else {\n          botResponse = '이것은 봇의 응답입니다.';\n        }\n        this.messages.push({\n          sender: 'bot',\n          text: botResponse\n        });\n        this.scrollToEnd();\n      }, 1000);\n    },\n    scrollToEnd() {\n      const chatWindow = this.$el.querySelector('.chat-window');\n      chatWindow.scrollTop = chatWindow.scrollHeight;\n    }\n  }\n};","map":{"version":3,"names":["name","data","messages","userInput","methods","sendMessage","trim","push","sender","text","userMessage","getBotResponse","message","setTimeout","botResponse","toLowerCase","includes","scrollToEnd","chatWindow","$el","querySelector","scrollTop","scrollHeight"],"sources":["/Users/parkjiyoung/Desktop/computer/smart_injae/hackshim_project/saveus_proto/saveus/frontend/src/assets/js/ChatBot.js"],"sourcesContent":["export default {\n    name: 'ChatBot',\n    data() {\n        return {\n            messages: [],\n            userInput: ''\n        };\n        },\n        methods: {\n        sendMessage() {\n            if (this.userInput.trim() !== '') {\n            this.messages.push({ sender: 'user', text: this.userInput });\n            const userMessage = this.userInput;\n            this.userInput = '';\n            this.getBotResponse(userMessage);\n            }\n        },\n        getBotResponse(message) {\n            // 봇 응답을 시뮬레이션\n            setTimeout(() => {\n            let botResponse = '';\n            if (message.toLowerCase().includes('안녕하세요')) {\n                botResponse = '안녕하세요! 무엇을 도와드릴까요?';\n            } else if (message.toLowerCase().includes('도움')) {\n                botResponse = '물론이죠, 무엇을 도와드릴까요?';\n            } else {\n                botResponse = '이것은 봇의 응답입니다.';\n            }\n            this.messages.push({ sender: 'bot', text: botResponse });\n            this.scrollToEnd();\n            }, 1000);\n        },\n        scrollToEnd() {\n            const chatWindow = this.$el.querySelector('.chat-window');\n            chatWindow.scrollTop = chatWindow.scrollHeight;\n        }\n    }\n};"],"mappings":";AAAA,eAAe;EACXA,IAAI,EAAE,SAAS;EACfC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,QAAQ,EAAE,EAAE;MACZC,SAAS,EAAE;IACf,CAAC;EACD,CAAC;EACDC,OAAO,EAAE;IACTC,WAAWA,CAAA,EAAG;MACV,IAAI,IAAI,CAACF,SAAS,CAACG,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;QAClC,IAAI,CAACJ,QAAQ,CAACK,IAAI,CAAC;UAAEC,MAAM,EAAE,MAAM;UAAEC,IAAI,EAAE,IAAI,CAACN;QAAU,CAAC,CAAC;QAC5D,MAAMO,WAAW,GAAG,IAAI,CAACP,SAAS;QAClC,IAAI,CAACA,SAAS,GAAG,EAAE;QACnB,IAAI,CAACQ,cAAc,CAACD,WAAW,CAAC;MAChC;IACJ,CAAC;IACDC,cAAcA,CAACC,OAAO,EAAE;MACpB;MACAC,UAAU,CAAC,MAAM;QACjB,IAAIC,WAAW,GAAG,EAAE;QACpB,IAAIF,OAAO,CAACG,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC,OAAO,CAAC,EAAE;UACzCF,WAAW,GAAG,oBAAoB;QACtC,CAAC,MAAM,IAAIF,OAAO,CAACG,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC,IAAI,CAAC,EAAE;UAC7CF,WAAW,GAAG,mBAAmB;QACrC,CAAC,MAAM;UACHA,WAAW,GAAG,eAAe;QACjC;QACA,IAAI,CAACZ,QAAQ,CAACK,IAAI,CAAC;UAAEC,MAAM,EAAE,KAAK;UAAEC,IAAI,EAAEK;QAAY,CAAC,CAAC;QACxD,IAAI,CAACG,WAAW,CAAC,CAAC;MAClB,CAAC,EAAE,IAAI,CAAC;IACZ,CAAC;IACDA,WAAWA,CAAA,EAAG;MACV,MAAMC,UAAU,GAAG,IAAI,CAACC,GAAG,CAACC,aAAa,CAAC,cAAc,CAAC;MACzDF,UAAU,CAACG,SAAS,GAAGH,UAAU,CAACI,YAAY;IAClD;EACJ;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}